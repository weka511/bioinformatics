#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('2sat.py'),
                  loc('2sum.py'),
                  loc('3sum.py'),
                  loc('align.py'),
                  loc('alph.py'),
                  loc('ASMQ.py'),
                  loc('BA4M.py'),
                  loc('BA5H.py'),
                  loc('BA5I.py'),
                  loc('BA5J.py'),
                  loc('BA5K.py'),
                  loc('BA5L.py'),
                  loc('BA5M.py'),
                  loc('BA6A.py'),
                  loc('BA6B.py'),
                  loc('BA6C.py'),
                  loc('BA6D.py'),
                  loc('BA6F.py'),
                  loc('BA6G.py'),
                  loc('BA6H.py'),
                  loc('BA6I.py'),
                  loc('BA6J.py'),
                  loc('BA6K.py'),
                  loc('BA7A.py'),
                  loc('BA7B.py'),
                  loc('BA7C.py'),
                  loc('BA7D.py'),
                  loc('BA7E.py'),
                  loc('BA7F.py'),
                  loc('BA7G.py'),
                  loc('BA8A.py'),
                  loc('BA8B.py'),
                  loc('BA8C.py'),
                  loc('BA8D.py'),
                  loc('BA8E.py'),
                  loc('BA9A.py'),
                  loc('BA9B.py'),
                  loc('BA9C.py'),
                  loc('BA9D.py'),
                  loc('BA9E.py'),
                  loc('BA9F.py'),
                  loc('BA9G.py'),
                  loc('BA9H.py'),
                  loc('BA9I.py'),
                  loc('BA9J.py'),
                  loc('BA9K.py'),
                  loc('BA9L.py'),
                  loc('BA9M.py'),
                  loc('BA9N.py'),
                  loc('BA9O.py'),
                  loc('BA9P.py'),
                  loc('BA9Q.py'),
                  loc('BA9R.py'),
                  loc('BA10A.py'),
                  loc('BA10B.py'),
                  loc('BA10C.py'),
                  loc('BA10D.py'),
                  loc('BA10E.py'),
                  loc('BA10F.py'),
                  loc('BA10G.py'),
                  loc('BA10H.py'),
                  loc('BA10I.py'),
                  loc('BA10J.py'),
                  loc('BA10K.py'),
                  loc('BA11A.py'),
                  loc('BA11B.py'),
                  loc('BA11C.py'),
                  loc('BA11D.py'),
                  loc('BA11E.py'),
                  loc('BA11F.py'),
                  loc('BA11G.py'),
                  loc('BA11H.py'),
                  loc('BA11I.py'),
                  loc('BA11J.py'),
                  loc('bf.py'),
                  loc('bfs.py'),
                  loc('BINS.py'),
                  loc('bip.py'),
                  loc('cat.py'),
                  loc('cc.py'),
                  loc('chbp.py'),
                  loc('cntq.py'),
                  loc('combinatorics.py'),
                  loc('conv.py'),
                  loc('CORR.py'),
                  loc('count_kmers.py'),
                  loc('cset.py'),
                  loc('cstr.py'),
                  loc('ctbl.py'),
                  loc('cte.py'),
                  loc('ctea.py'),
                  loc('dag.py'),
                  loc('DBRU.py'),
                  loc('DDEG.py'),
                  loc('DEG.py'),
                  loc('dij.py'),
                  loc('dna.py'),
                  loc('edit.py'),
                  loc('edta.py'),
                  loc('eubt.py'),
                  loc('fasta.py'),
                  loc('fibo.py'),
                  loc('fragile.py'),
                  loc('FRMT.py'),
                  loc('full.py'),
                  loc('gaff.py'),
                  loc('GBK.py'),
                  loc('gcon.py'),
                  loc('GLOB.py'),
                  loc('graphs.py'),
                  loc('GREP.py'),
                  loc('gs.py'),
                  loc('hdag.py'),
                  loc('hea.py'),
                  loc('helpers.py'),
                  loc('INS.py'),
                  loc('INV.py'),
                  loc('itwv.py'),
                  loc('KMP.py'),
                  loc('ksim.py'),
                  loc('laff.py'),
                  loc('lcsq.py'),
                  loc('ling.py'),
                  loc('loca.py'),
                  loc('LONG.py'),
                  loc('lrep.py'),
                  loc('maj.py'),
                  loc('MED.py'),
                  loc('mend.py'),
                  loc('MER.py'),
                  loc('mgap.py'),
                  loc('mmch.py'),
                  loc('motz.py'),
                  loc('MPRT.py'),
                  loc('mrep.py'),
                  loc('MS.py'),
                  loc('mult.py'),
                  loc('newick.py'),
                  loc('nwc.py'),
                  loc('nwck.py'),
                  loc('oap.py'),
                  loc('orfr.py'),
                  loc('osym.py'),
                  loc('PAR3.py'),
                  loc('PAR.py'),
                  loc('PCOV.py'),
                  loc('pdpl.py'),
                  loc('phylogeny.py'),
                  loc('pmch.py'),
                  loc('prsm.py'),
                  loc('ps.py'),
                  loc('PTRA.py'),
                  loc('qrt.py'),
                  loc('qrtd.py'),
                  loc('QS.py'),
                  loc('README.md'),
                  loc('rear.py'),
                  loc('reference_tables.py'),
                  loc('revp.py'),
                  loc('rna.py'),
                  loc('rnas.py'),
                  loc('rosalind.py'),
                  loc('rsub.py'),
                  loc('sc.py'),
                  loc('scc.py'),
                  loc('scsp.py'),
                  loc('sdag.py'),
                  loc('sgra.py'),
                  loc('sims.py'),
                  loc('smgb.py'),
                  loc('snp.py'),
                  loc('sort.py'),
                  loc('spec.py'),
                  loc('spectrum.py'),
                  loc('sptd.py'),
                  loc('sq.py'),
                  loc('suff.py'),
                  loc('template.py'),
                  loc('tree.py'),
                  loc('trie.py'),
                  loc('ts.py'),
                  loc('tyrocidine.py'),
                  loc('ukkonen.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('2sat.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('BA10D.py'): ('project',
        (u'--sample',
         '')),
                      loc('BA10E.py'): ('project',
        (u'--rosalind',
         '')),
                      loc('BA10F.py'): ('project',
        (u'--sample',
         '')),
                      loc('BA10H.py'): ('project',
        (u'--rosalind',
         '')),
                      loc('BA10J.py'): ('project',
        (u'--sample',
         '')),
                      loc('BA5K.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('BA5L.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('BA6A.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('BA6B.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('BA6C.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('BA6D.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('BA7F.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('BA9A.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('BA9B.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('BA9C.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('BA9D.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('BA9E.py'): ('project',
                                       (u'--extra',
        '')),
                      loc('BA9F.py'): ('project',
                                       (u'--extra',
        '')),
                      loc('BA9G.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('BA9H.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('BA9J.py'): ('project',
                                       (u'--extra',
        '')),
                      loc('BA9K.py'): ('project',
                                       (u'--extra',
        '')),
                      loc('BA9L.py'): ('project',
                                       (u'--extra',
        '')),
                      loc('BA9M.py'): ('project',
                                       (u'--extra',
        '')),
                      loc('BA9N.py'): ('project',
                                       (u'--extra',
        '')),
                      loc('BA9O.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('BA9P.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('BA9Q.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('BA9R.py'): ('project',
                                       (u'--banana --trace',
        '')),
                      loc('BINS.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('MPRT.py'): ('project',
                                       (u'rosalind_mprt.txt --path C:\\Users\\Simon\\Downloads --output foo.txt',
        '')),
                      loc('alph.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('bf.py'): ('project',
                                     (u'--sample',
                                      '')),
                      loc('bfs.py'): ('project',
                                      (u'--sample',
                                       '')),
                      loc('cat.py'): ('project',
                                      (u'--sample',
                                       '')),
                      loc('chbp.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('cntq.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('combinatorics.py'): ('project',
        (u'--sample',
         '')),
                      loc('cset.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('cstr.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('ctbl.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('ctea.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('dij.py'): ('project',
                                      (u'--sample',
                                       '')),
                      loc('dna.py'): ('project',
                                      (u'--rosalind',
                                       '')),
                      loc('edta.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('eubt.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('fibo.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('gcon.py'): ('project',
                                       (u'--test',
        '')),
                      loc('itwv.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('ksim.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('laff-pypl.py'): ('project',
        (u'--rosalind',
         '')),
                      loc('laff.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('lalign.py'): ('project',
        (u'--email simon@greenweaves.nz --stype dna --expthr 0.1 --asequence GACTCCTTTGTTTGCCTTAAATAGATACATATTTACTCTTGACTCTTTTGTTGGCCTTAAATAGATACATATTTGTGCGACTCCACGAGTGATTCGTA --bsequence ATGGACTCCTTTGTTTGCCTTAAATAGATACATATTCAACAAGTGTGCACTTAGCCTTGCCGACTCCTTTGTTTGCCTTAAATAGATACATATTTG',
         '')),
                      loc('ling.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('lrep.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('mend.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('mgap.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('mmch.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('motz.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('mrep.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('mult.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('nwc.py'): ('project',
                                      (u'--rosalind',
                                       '')),
                      loc('oap.py'): ('project',
                                      (u'--sample',
                                       '')),
                      loc('osym.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('pdpl.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('phylogeny.py'): ('project',
        (u'--sample',
         '')),
                      loc('pmch.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('qrt.py'): ('project',
                                      (u'--rosalind',
                                       '')),
                      loc('qrtd.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('revp.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('rna.py'): ('project',
                                      (u'--sample',
                                       '')),
                      loc('rnas.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('rsub.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('scc.py'): ('project',
                                      (u'--sample',
                                       '')),
                      loc('sdag.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('sims.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('smgb.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('sptd.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('subo.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('suff.py'): ('project',
                                       (u'--sample',
        '')),
                      loc('template.py'): ('project',
        (u'--sample',
         '')),
                      loc('tree.py'): ('project',
                                       (u'--rosalind',
        '')),
                      loc('trie.py'): ('project',
                                       (u'--sample',
        ''))}
[user attributes]
debug.err-values = {loc('BA5H.py'): {},
                    loc('cte.py'): {}}
debug.recent-run-args = {loc('2sat.py'): [u'--rosalind',
        u'--sample',
        u'-rosalind'],
                         loc('BA10D.py'): [u'--sample',
        u'--rosalind',
        u'--extra'],
                         loc('BA10E.py'): [u'--rosalind',
        u'--rosalind --precision 12',
        u'--extra',
        u'--rosalind --precision 3',
        u'--rosalind precision=3',
        u'--text',
        u'--sample',
        u'--rosalind  --precision 3 --trace',
        u'--sample  --precision 3 --trace',
        u'--rosalind  --precision 3',
        u'--text --trace',
        u'--text --precision 5',
        u'--text precision 5'],
                         loc('BA10F.py'): [u'--sample'],
                         loc('BA10H.py'): [u'--rosalind',
        u'--extra',
        u'--sample'],
                         loc('BA10J.py'): [u'--sample'],
                         loc('BA5K.py'): [u'--sample',
        u'--align',
        u'--extra'],
                         loc('BA5L.py'): [u'--sample',
        u'--extra'],
                         loc('BA6A.py'): [u'--rosalind',
        u'--sample'],
                         loc('BA6B.py'): [u'--sample',
        u'--rosalind'],
                         loc('BA6C.py'): [u'--sample',
        u'--rosalind'],
                         loc('BA6D.py'): [u'--sample'],
                         loc('BA7F.py'): [u'--sample'],
                         loc('BA9A.py'): [u'--sample',
        u'--rosalind',
        u'--extra'],
                         loc('BA9B.py'): [u'--rosalind',
        u'--extra',
        u'--sample'],
                         loc('BA9C.py'): [u'--rosalind',
        u'--extra',
        u'--sample'],
                         loc('BA9D.py'): [u'--rosalind',
        u'--extra',
        u'--sample'],
                         loc('BA9E.py'): [u'--extra',
        u'--sample',
        u'--rosalind'],
                         loc('BA9F.py'): [u'--extra',
        u'--sample'],
                         loc('BA9G.py'): [u'--sample',
        u'--rosalind',
        u'--extra'],
                         loc('BA9H.py'): [u'--rosalind',
        u'--sample'],
                         loc('BA9J.py'): [u'--extra',
        u'--sample',
        u'--rosalind'],
                         loc('BA9K.py'): [u'--extra',
        u'--sample',
        u'--rosalind'],
                         loc('BA9L.py'): [u'--extra',
        u'--sample',
        u'--rosalind'],
                         loc('BA9M.py'): [u'--extra',
        u'--sample',
        u'--rosalind'],
                         loc('BA9N.py'): [u'--extra',
        u'--sample',
        u'--panama',
        u'--banana'],
                         loc('BA9O.py'): [u'--sample'],
                         loc('BA9P.py'): [u'--rosalind',
        u'--sample',
        u'--extra'],
                         loc('BA9Q.py'): [u'--rosalind',
        u'--extra',
        u'--sample'],
                         loc('BA9R.py'): [u'--banana --trace',
        u'--banana',
        u'--banana  --trace',
        u'--banana  --debug',
        u'--sample --debug',
        u'--sample',
        u'--extra',
        u'--debug --extra',
        u'--debug',
        u'--extra --debug',
        u'--rosalind'],
                         loc('BINS.py'): [u'--rosalind',
        u'--sample'],
                         loc('MPRT.py'): [u'rosalind_mprt.txt --path C:\\Users\\Simon\\Downloads --output foo.txt',
        u'rosalind_mprt_2.txt --output foo.txt',
        u'rosalind_mprt_2.txt'],
                         loc('align.py'): [u'--sample'],
                         loc('alph.py'): [u'--sample',
        u'--rosalind'],
                         loc('bf.py'): [u'--sample',
        u'--rosalind'],
                         loc('bfs.py'): [u'--sample',
        u'--rosalind'],
                         loc('cat.py'): [u'--sample',
        u'--rosalind'],
                         loc('chbp.py'): [u'--rosalind',
        u'--abcde',
        u'--sample'],
                         loc('cntq.py'): [u'--rosalind',
        u'--sample'],
                         loc('combinatorics.py'): [u'--sample'],
                         loc('cset.py'): [u'--rosalind',
        u'--sample',
        u'--align'],
                         loc('cstr.py'): [u'--rosalind',
        u'--sample'],
                         loc('ctbl.py'): [u'--sample',
        u'--rosalind'],
                         loc('ctea.py'): [u'--rosalind',
        u'--sample'],
                         loc('dij.py'): [u'--sample',
        u'--rosalind'],
                         loc('dna.py'): [u'--rosalind',
        u'--sample'],
                         loc('edta.py'): [u'--rosalind',
        u'--sample'],
                         loc('eubt.py'): [u'--rosalind',
        u'--sample'],
                         loc('fibo.py'): [u'--rosalind',
        u'--sample'],
                         loc('gcon.py'): [u'--test',
        u'--sample',
        u'--test 5',
        u'WWW DNP',
        u'--test 4',
        u'--test 3',
        u'--test 2',
        u'--test 1',
        u'foo bar baz'],
                         loc('itwv.py'): [u'--sample'],
                         loc('ksim.py'): [u'--rosalind',
        u'--sample'],
                         loc('laff-pypl.py'): [u'--rosalind',
        u'--sample'],
                         loc('laff.py'): [u'--sample',
        u'--rosalind'],
                         loc('lalign.py'): [u'--email simon@greenweaves.nz --stype dna --expthr 0.1 --asequence GACTCCTTTGTTTGCCTTAAATAGATACATATTTACTCTTGACTCTTTTGTTGGCCTTAAATAGATACATATTTGTGCGACTCCACGAGTGATTCGTA --bsequence ATGGACTCCTTTGTTTGCCTTAAATAGATACATATTCAACAAGTGTGCACTTAGCCTTGCCGACTCCTTTGTTTGCCTTAAATAGATACATATTTG',
        u'--email simon@greenweaves.nz --stype dna --expthr 0.1 -asequence GACTCCTTTGTTTGCCTTAAATAGATACATATTTACTCTTGACTCTTTTGTTGGCCTTAAATAGATACATATTTGTGCGACTCCACGAGTGATTCGTA --bsequence ATGGACTCCTTTGTTTGCCTTAAATAGATACATATTCAACAAGTGTGCACTTAGCCTTGCCGACTCCTTTGTTTGCCTTAAATAGATACATATTTG',
        u'--email simon@greenweaves.nz --stype dna ---expthr 0.1 -asequence GACTCCTTTGTTTGCCTTAAATAGATACATATTTACTCTTGACTCTTTTGTTGGCCTTAAATAGATACATATTTGTGCGACTCCACGAGTGATTCGTA --bsequence ATGGACTCCTTTGTTTGCCTTAAATAGATACATATTCAACAAGTGTGCACTTAGCCTTGCCGACTCCTTTGTTTGCCTTAAATAGATACATATTTG',
        u'--email simon@greenweaves.nz --stype dna --asequence GACTCCTTTGTTTGCCTTAAATAGATACATATTTACTCTTGACTCTTTTGTTGGCCTTAAATAGATACATATTTGTGCGACTCCACGAGTGATTCGTA --bsequence ATGGACTCCTTTGTTTGCCTTAAATAGATACATATTCAACAAGTGTGCACTTAGCCTTGCCGACTCCTTTGTTTGCCTTAAATAGATACATATTTG',
        u'--email simon@greenweaves.nz --stype DNA --asequence GACTCCTTTGTTTGCCTTAAATAGATACATATTTACTCTTGACTCTTTTGTTGGCCTTAAATAGATACATATTTGTGCGACTCCACGAGTGATTCGTA --bsequence ATGGACTCCTTTGTTTGCCTTAAATAGATACATATTCAACAAGTGTGCACTTAGCCTTGCCGACTCCTTTGTTTGCCTTAAATAGATACATATTTG'],
                         loc('ling.py'): [u'--rosalind',
        u'--sample',
        u'--ukkonen',
        u'--actual',
        u'--align'],
                         loc('lrep.py'): [u'--rosalind',
        u'--sample'],
                         loc('mend.py'): [u'--rosalind',
        u'--sample'],
                         loc('mgap.py'): [u'--sample'],
                         loc('mmch.py'): [u'--rosalind',
        u'--sample3',
        u'--sample2',
        u'--sample',
        u'-sample'],
                         loc('motz.py'): [u'--sample',
        u'--rosalind'],
                         loc('mrep.py'): [u'--rosalind',
        u'--sample',
        u'--extra'],
                         loc('mult.py'): [u'--sample'],
                         loc('nwc.py'): [u'--rosalind',
        u'--sample'],
                         loc('oap.py'): [u'--sample',
        u'--rosalind'],
                         loc('osym.py'): [u'--sample'],
                         loc('pdpl.py'): [u'--rosalind',
        u'--sample'],
                         loc('phylogeny.py'): [u'--sample'],
                         loc('pmch.py'): [u'--rosalind',
        u'--sample'],
                         loc('qrt.py'): [u'--rosalind',
        u'--sample'],
                         loc('qrtd.py'): [u'--sample',
        u'--rosalind',
        u'--align'],
                         loc('revp.py'): [u'--sample'],
                         loc('rna.py'): [u'--sample'],
                         loc('rnas.py'): [u'--sample',
        u'--rosalind'],
                         loc('rsub.py'): [u'--sample'],
                         loc('scc.py'): [u'--sample',
        u'--rosalind'],
                         loc('sdag.py'): [u'--rosalind',
        u'--sample'],
                         loc('sims.py'): [u'--sample',
        u'--rosalind'],
                         loc('smgb.py'): [u'--sample',
        u'--rosalind'],
                         loc('sptd.py'): [u'--rosalind',
        u'--sample',
        u'--align'],
                         loc('subo.py'): [u'--sample',
        u'--rosalind'],
                         loc('suff.py'): [u'--sample',
        u'--rosalind'],
                         loc('template.py'): [u'--sample'],
                         loc('tree.py'): [u'--rosalind',
        u'--sample'],
                         loc('trie.py'): [u'--sample',
        u'--rosalind']}
debug.show-args-dialog = {loc('ASMQ.py'): False,
                          loc('BA4M.py'): False,
                          loc('BA7A.py'): False,
                          loc('BA7B.py'): False,
                          loc('BA7C.py'): False,
                          loc('BA7D.py'): False,
                          loc('BA7E.py'): False,
                          loc('BA7G.py'): False,
                          loc('BA8B.py'): False,
                          loc('BA8E.py'): False,
                          loc('CORR.py'): False,
                          loc('DBRU.py'): False,
                          loc('GASM.py'): False,
                          loc('GREP.py'): False,
                          loc('KMP.py'): False,
                          loc('PCOV.py'): False,
                          loc('count-kmer-occurrences.py'): False,
                          loc('newick.py'): False,
                          loc('nwck.py'): False,
                          loc('rosalind.py'): False,
                          loc('../cluster/fcs_params.py'): False,
                          loc('unknown:<untitled> #16'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqE'\
        'mVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.2524199553239017,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(155,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('DBRU.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('DBRU.py'),
                      'a')]},
        loc('GREP.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('function def',
                                       loc('GREP.py'),
                                       'count_kmers')]},
        loc('PCOV.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('function def',
                                       loc('PCOV.py'),
                                       'pcov')]},
        loc('rosalind.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('function def',
        loc('rosalind.py'),
        'dbru')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [0,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'findEncodings',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'scores',
                                       'fReverse': True,
                                       'fSearchText': u'matrix',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('mgap.py'),
        {'attrib-starts': [('mgap|0|',
                            33),
                           ('mgap|0|.get_N|0|',
                            34),
                           ('mgap|0|.get_N|0|.dynamic_programming|0|',
                            35)],
         'code-line': '            return matrix[len(s)][len(t)],matrix     '\
                      '   \r\n',
         'first-line': 33L,
         'folded-linenos': [],
         'sel-line': 50L,
         'sel-line-start': 2039L,
         'selection_end': 2039L,
         'selection_start': 2039L,
         'zoom': 0L},
        1611625755.555],
        [loc('align.py'),
         {'attrib-starts': [('edit|0|',
                             432),
                            ('edit|0|.dynamic_programming|0|',
                             434)],
          'code-line': '                    matrix[i-1][j]   + indel_cost,\r'\
                       '\n',
          'first-line': 424L,
          'folded-linenos': [],
          'sel-line': 445L,
          'sel-line-start': 16332L,
          'selection_end': 16340L,
          'selection_start': 16340L,
          'zoom': 0L},
         1611625771.365],
        [loc('mgap.py'),
         {'attrib-starts': [('mgap|0|',
                             33),
                            ('mgap|0|.get_N|0|',
                             34),
                            ('mgap|0|.get_N|0|.dynamic_programming|0|',
                             35)],
          'code-line': '            return matrix[len(s)][len(t)],matrix    '\
                       '    \r\n',
          'first-line': 33L,
          'folded-linenos': [],
          'sel-line': 50L,
          'sel-line-start': 2035L,
          'selection_end': 2035L,
          'selection_start': 2035L,
          'zoom': 0L},
         1611625870.998],
        [loc('edta.py'),
         {'attrib-starts': [],
          'code-line': "        d,s,t=edta('PRETTY' ,'PRTTEIN')\r\n",
          'first-line': 13L,
          'folded-linenos': [],
          'sel-line': 33L,
          'sel-line-start': 1332L,
          'selection_end': 1350L,
          'selection_start': 1346L,
          'zoom': 0L},
         1611625881.33],
        [loc('align.py'),
         {'attrib-starts': [('edta|0|',
                             486)],
          'code-line': '    d,matrix = edit(s,t,indel_cost,replace_cost)\r\n',
          'first-line': 491L,
          'folded-linenos': [],
          'sel-line': 506L,
          'sel-line-start': 19329L,
          'selection_end': 19348L,
          'selection_start': 19344L,
          'zoom': 0L},
         1611625901.444],
        [loc('align.py'),
         {'attrib-starts': [('edit|0|',
                             432)],
          'code-line': 'def edit(s,t,indel_cost=1,replace_cost=lambda a,b: 1'\
                       ',show_matrix=False):\r\n',
          'first-line': 428L,
          'folded-linenos': [],
          'sel-line': 432L,
          'sel-line-start': 15896L,
          'selection_end': 15904L,
          'selection_start': 15900L,
          'zoom': 0L},
         1611625980.405],
        [loc('mgap.py'),
         {'attrib-starts': [('mgap|0|',
                             33),
                            ('mgap|0|.get_N|0|',
                             34),
                            ('mgap|0|.get_N|0|.dynamic_programming|0|',
                             35)],
          'code-line': '            matrix = [[0 for j in range(len(t)+1)] f'\
                       'or i in range(len(s)+1)]\r\n',
          'first-line': 29L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 1489L,
          'selection_end': 1507L,
          'selection_start': 1501L,
          'zoom': 0L},
         1611626256.944],
        [loc('mgap.py'),
         {'attrib-starts': [('mgap|0|',
                             33),
                            ('mgap|0|.get_N|0|',
                             34),
                            ('mgap|0|.get_N|0|.dynamic_programming|0|',
                             35)],
          'code-line': '                matrix[0][j] = g * j\r\n',
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 39L,
          'sel-line-start': 1612L,
          'selection_end': 1634L,
          'selection_start': 1628L,
          'zoom': 0L},
         1611626262.85],
        [loc('mgap.py'),
         {'attrib-starts': [('mgap|0|',
                             33),
                            ('mgap|0|.get_N|0|',
                             34),
                            ('mgap|0|.get_N|0|.dynamic_programming|0|',
                             35)],
          'code-line': '            matrix = [[0 for j in range(len(t)+1)] f'\
                       'or i in range(len(s)+1)]\r\n',
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 1489L,
          'selection_end': 1507L,
          'selection_start': 1501L,
          'zoom': 0L},
         1611626276.149],
        [loc('mgap.py'),
         {'attrib-starts': [('mgap|0|',
                             33),
                            ('mgap|0|.get_N|0|',
                             34),
                            ('mgap|0|.get_N|0|.backtrack|0|',
                             52)],
          'code-line': '                    #print (s[i-1], t[j-1])\r\n',
          'first-line': 50L,
          'folded-linenos': [],
          'sel-line': 66L,
          'sel-line-start': 2671L,
          'selection_end': 2674L,
          'selection_start': 2674L,
          'zoom': 0L},
         1611629464.95],
        [loc('oap.py'),
         {'attrib-starts': [],
          'code-line': 'from   laff import read_fasta\r\n',
          'first-line': 8L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 815L,
          'selection_end': 844L,
          'selection_start': 815L,
          'zoom': 0L},
         1611629477.03],
        [loc('mgap.py'),
         {'attrib-starts': [],
          'code-line': 'from   laff import read_fasta\r\n',
          'first-line': 78L,
          'folded-linenos': [],
          'sel-line': 20L,
          'sel-line-start': 819L,
          'selection_end': 848L,
          'selection_start': 848L,
          'zoom': 0L},
         1611629500.17],
        [loc('oap.py'),
         {'attrib-starts': [],
          'code-line': "        Data      = read_fasta(f'data/rosalind_{os.p"\
                       "ath.basename(__file__).split(\".\")[0]}.txt')       "\
                       "   \r\n",
          'first-line': 78L,
          'folded-linenos': [],
          'sel-line': 97L,
          'sel-line-start': 3683L,
          'selection_end': 3778L,
          'selection_start': 3691L,
          'zoom': 0L},
         1611629517.24],
        [loc('mgap.py'),
         {'attrib-starts': [],
          'code-line': "            f.write(f'{Result}\\n')\r\n",
          'first-line': 78L,
          'folded-linenos': [],
          'sel-line': 99L,
          'sel-line-start': 3943L,
          'selection_end': 3972L,
          'selection_start': 3972L,
          'zoom': 0L},
         1611629683.671],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '|mgap|mmgap.py|[Maximizing the Gap Symbols of an Opt'\
                       'imal Alignment](http://rosalind.info/problems/mgap/)'\
                       '|\r\n',
          'first-line': 106L,
          'folded-linenos': [],
          'sel-line': 114L,
          'sel-line-start': 10092L,
          'selection_end': 10196L,
          'selection_start': 10196L,
          'zoom': 0L},
         1612920504.625],
        [loc('oap.py'),
         {'attrib-starts': [],
          'code-line': "        Data      = read_fasta(f'data/rosalind_{os.p"\
                       "ath.basename(__file__).split(\".\")[0]}.txt')       "\
                       "   \r\n",
          'first-line': 78L,
          'folded-linenos': [],
          'sel-line': 97L,
          'sel-line-start': 3683L,
          'selection_end': 3778L,
          'selection_start': 3691L,
          'zoom': 0L},
         1612920505.932],
        [loc('mgap.py'),
         {'attrib-starts': [],
          'code-line': "            f.write(f'{Result}\\n')\r\n",
          'first-line': 78L,
          'folded-linenos': [],
          'sel-line': 99L,
          'sel-line-start': 3943L,
          'selection_end': 3972L,
          'selection_start': 3972L,
          'zoom': 0L},
         1612920506.81],
        [loc('edta.py'),
         {'attrib-starts': [],
          'code-line': "        d,s,t=edta('PRETTY' ,'PRTTEIN')\r\n",
          'first-line': 13L,
          'folded-linenos': [],
          'sel-line': 33L,
          'sel-line-start': 1332L,
          'selection_end': 1350L,
          'selection_start': 1346L,
          'zoom': 0L},
         1612920510.23],
        [loc('align.py'),
         {'attrib-starts': [('edit|0|',
                             432)],
          'code-line': 'def edit(s,t,indel_cost=1,replace_cost=lambda a,b: 1'\
                       ',show_matrix=False):\r\n',
          'first-line': 428L,
          'folded-linenos': [],
          'sel-line': 432L,
          'sel-line-start': 15896L,
          'selection_end': 15904L,
          'selection_start': 15900L,
          'zoom': 0L},
         1612920511.854],
        [loc('rosalind.py'),
         {'attrib-starts': [('Test_4_SequenceAntibodies|0|',
                             3024),
                            ('Test_4_SequenceAntibodies|0|.test_ba4b|0|',
                             3026)],
          'code-line': "            encodings=findEncodings('ATGGCCATGGCCCCC"\
                       "AGAACTGAGATCAATAGTACCCGTATTAACGGGTGA','MA')\r\n",
          'first-line': 3013L,
          'folded-linenos': [],
          'sel-line': 3027L,
          'sel-line-start': 112048L,
          'selection_end': 112083L,
          'selection_start': 112070L,
          'zoom': 0L},
         1613246064.897]],
        20),
        'current-loc': None,
        'editor-state-list': [(loc('rosalind.py'),
                               {'attrib-starts': [('Test_4_SequenceAntibodie'\
        's|0|',
        3024),
        ('Test_4_SequenceAntibodies|0|.test_ba4b|0|',
         3026)],
                                'code-line': "            encodings=findEnco"\
        "dings('ATGGCCATGGCCCCCAGAACTGAGATCAATAGTACCCGTATTAACGGGTGA','MA')\r"\
        "\n",
                                'first-line': 3013L,
                                'folded-linenos': [],
                                'sel-line': 3027L,
                                'sel-line-start': 112048L,
                                'selection_end': 112083L,
                                'selection_start': 112070L,
                                'zoom': 0L})],
        'has-focus': False,
        'locked': False},
        [loc('rosalind.py')]),
                               'open_files': []},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           0),
                          1613246039.773),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1611451356.637),
                 'user_data': {}},
        'window-alloc': (7,
                         -8,
                         1362,
                         732)}]}
guimgr.recent-documents = [loc('rosalind.py')]
guimgr.visual-state = {loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'): {'a'\
        'ttrib-starts': [('iter|0|',
                          1809)],
        'code-line': 'def iter(iterable):\n',
        'first-line': 1796L,
        'folded-linenos': [],
        'sel-line': 1809L,
        'sel-line-start': 54070L,
        'selection_end': 54078L,
        'selection_start': 54074L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/Bio/File.py'): {'a'\
        'ttrib-starts': [('as_handle',
                          57)],
        'first-line': 93L,
        'folded-linenos': [],
        'sel-line': 112L,
        'sel-line-start': 3870L,
        'selection_end': 3870L,
        'selection_start': 3870L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/Bio/SubsMat/MatrixInfo.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 765L,
        'folded-linenos': [],
        'sel-line': 932L,
        'sel-line-start': 59505L,
        'selection_end': 59513L,
        'selection_start': 59505L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/numpy/core/fromnumeric.py'): {'a'\
        'ttrib-starts': [('argmax',
                          910)],
        'first-line': 948L,
        'folded-linenos': [],
        'sel-line': 967L,
        'sel-line-start': 31833L,
        'selection_end': 31833L,
        'selection_start': 31833L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/sre_parse.py'): {'attrib-'\
        'starts': [('_parse',
                    490)],
        'first-line': 762L,
        'folded-linenos': [],
        'sel-line': 780L,
        'sel-line-start': 29149L,
        'selection_end': 29149L,
        'selection_start': 29149L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/unittest/case.py'): {'att'\
        'rib-starts': [('TestCase',
                        340),
                       ('TestCase._baseAssertEqual',
                        816)],
        'first-line': 801L,
        'folded-linenos': [],
        'sel-line': 821L,
        'sel-line-start': 31048L,
        'selection_end': 31048L,
        'selection_start': 31048L,
        'zoom': 0L},
                       loc('../../../Program Files (x86)/Wing IDE Personal 6.0/resources/builtin-pi-files/3.5/builtins.pi'): {'a'\
        'ttrib-starts': [('print',
                          2749)],
        'first-line': 2735L,
        'folded-linenos': [],
        'sel-line': 2749L,
        'sel-line-start': 86688L,
        'selection_end': 86697L,
        'selection_start': 86692L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'a'\
        'ttrib-starts': [('ArgumentParser|0|',
                          1618),
                         ('ArgumentParser|0|.parse_args|0|',
                          1766)],
        'code-line': '        args, argv = self.parse_known_args(args, names'\
                     'pace)\r\n',
        'first-line': 1747L,
        'folded-linenos': [],
        'sel-line': 1767L,
        'sel-line-start': 65919L,
        'selection_end': 65919L,
        'selection_start': 65919L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/Bio/File.py'): {'a'\
        'ttrib-starts': [('as_handle|0|',
                          28)],
        'code-line': '        with open(handleish, mode, **kwargs) as fp:\n',
        'first-line': 51L,
        'folded-linenos': [],
        'sel-line': 71L,
        'sel-line-start': 2212L,
        'selection_end': 2212L,
        'selection_start': 2212L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/Bio/Phylo/_io.py'): {'a'\
        'ttrib-starts': [('read|0|',
                          51)],
        'code-line': 'def read(file, format, **kwargs):\n',
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 51L,
        'sel-line-start': 1293L,
        'selection_end': 1301L,
        'selection_start': 1297L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/Bio/Seq.py'): {'a'\
        'ttrib-starts': [('translate|0|',
                          2371)],
        'code-line': '                raise ValueError("Bad table argument")'\
                     ' from None\n',
        'first-line': 2460L,
        'folded-linenos': [],
        'sel-line': 2480L,
        'sel-line-start': 86460L,
        'selection_end': 86460L,
        'selection_start': 86460L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/_distributor_init.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '            for filename in glob.glob(os.path.join(lib'\
                     's_dir,\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 650L,
        'selection_end': 650L,
        'selection_start': 650L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tarjan/__init__.py'): {'a'\
        'ttrib-starts': [('tarjan|0|',
                          80)],
        'code-line': 'def tarjan(g):\n',
        'first-line': 92L,
        'folded-linenos': [],
        'sel-line': 80L,
        'sel-line-start': 3056L,
        'selection_end': 3066L,
        'selection_start': 3060L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/unittest/case.py'): {'a'\
        'ttrib-starts': [('TestCase|0|',
                          374),
                         ('TestCase|0|._baseAssertEqual|0|',
                          899)],
        'code-line': '            raise self.failureException(msg)\r\n',
        'first-line': 884L,
        'folded-linenos': [],
        'sel-line': 904L,
        'sel-line-start': 34714L,
        'selection_end': 34714L,
        'selection_start': 34714L,
        'zoom': 0L},
                       loc('../AppData/Local/Temp/rosalind.py-rev749.svn000.tmp.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../AppData/Local/Wing Personal 7/pi-cache/3.8/C/Users/Simon/AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_multiarray_umath.pi'): {'a'\
        'ttrib-starts': [('zeros|0|',
                          11334)],
        'code-line': 'def zeros():\n',
        'first-line': 11321L,
        'folded-linenos': [],
        'sel-line': 11334L,
        'sel-line-start': 397112L,
        'selection_end': 397121L,
        'selection_start': 397116L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/indexing.py'): {'a'\
        'ttrib-starts': [('_iLocIndexer|0|',
                          1968),
                         ('_iLocIndexer|0|._validate_integer|0|',
                          2044)],
        'code-line': '            raise IndexError("single positional indexe'\
                     'r is out-of-bounds")\r\n',
        'first-line': 2042L,
        'folded-linenos': [],
        'sel-line': 2062L,
        'sel-line-start': 73225L,
        'selection_end': 73225L,
        'selection_start': 73225L,
        'zoom': 0L},
                       loc('3sum.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 63L,
        'sel-line-start': 2136L,
        'selection_end': 2172L,
        'selection_start': 2172L,
        'zoom': 0L},
                       loc('ASMQ.py'): {'attrib-starts': [],
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 36L,
        'sel-line-start': 1045L,
        'selection_end': 1329L,
        'selection_start': 1045L,
        'zoom': 0L},
                       loc('B10A.py'): {'attrib-starts': [('ba10A',
        17)],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 787L,
        'selection_end': 793L,
        'selection_start': 793L,
        'zoom': 0L},
                       loc('BA10A.py'): {'attrib-starts': [],
        'code-line': '                                 {                    '\
                     '            #sample\r\n',
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 903L,
        'selection_end': 1255L,
        'selection_start': 936L,
        'zoom': 0L},
                       loc('BA10B.py'): {'attrib-starts': [],
        'code-line': "                                                 ('A',"\
                     "'x'): 0.419, ('A','y'):   0.321, ('A','z') : 0.26,\r\n",
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 24L,
        'sel-line-start': 1090L,
        'selection_end': 1149L,
        'selection_start': 1139L,
        'zoom': 0L},
                       loc('BA10C.py'): {'attrib-starts': [],
        'code-line': '    print ( Viterbi(xs,alphabet,States,Transition,Emis'\
                     'sion))\r\n',
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 24L,
        'sel-line-start': 890L,
        'selection_end': 909L,
        'selection_start': 902L,
        'zoom': 0L},
                       loc('BA10D.py'): {'attrib-starts': [],
        'code-line': '        Result = Likelihood(xs,alphabet,States,Transit'\
                     'ion,Emission)\r\n',
        'first-line': 29L,
        'folded-linenos': [],
        'sel-line': 48L,
        'sel-line-start': 2386L,
        'selection_end': 2413L,
        'selection_start': 2403L,
        'zoom': 0L},
                       loc('BA10E.py'): {'attrib-starts': [],
        'code-line': '    if args.extra:\r\n',
        'first-line': 58L,
        'folded-linenos': [],
        'sel-line': 74L,
        'sel-line-start': 3470L,
        'selection_end': 3570L,
        'selection_start': 3471L,
        'zoom': 0L},
                       loc('BA10F.py'): {'attrib-starts': [],
        'code-line': "        for row in formatEmission(Emission,States,['A'"\
                     ",   'B',   'C',   'D',   'E'],precision=args.precision"\
                     "):\r\n",
        'first-line': 17L,
        'folded-linenos': [],
        'sel-line': 40L,
        'sel-line-start': 1932L,
        'selection_end': 1951L,
        'selection_start': 1951L,
        'zoom': 0L},
                       loc('BA10G.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA10G \tPerform "\
                     "a Multiple Sequence Alignment with a Profile HMM ')\r"\
                     "\n",
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 921L,
        'selection_end': 1023L,
        'selection_start': 1023L,
        'zoom': 0L},
                       loc('BA10H.py'): {'attrib-starts': [],
        'code-line': 'from   hmm     import float2str,EstimateParameters\r\n',
        'first-line': 14L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 841L,
        'selection_end': 891L,
        'selection_start': 891L,
        'zoom': 0L},
                       loc('BA10I.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA10I \tImplemen"\
                     "t Viterbi Learning ')\r\n",
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 891L,
        'selection_end': 963L,
        'selection_start': 963L,
        'zoom': 0L},
                       loc('BA10J.py'): {'attrib-starts': [],
        'code-line': "                              ('B','x'):   0.04, ('B',"\
                     "'y'):    0.467, ('B','z'):   0.493   }):\r\n",
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 48L,
        'sel-line-start': 2031L,
        'selection_end': 2123L,
        'selection_start': 2123L,
        'zoom': 0L},
                       loc('BA10K.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA10K \tImplemen"\
                     "t Baum-Welch Learning ')\r\n",
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 894L,
        'selection_end': 969L,
        'selection_start': 969L,
        'zoom': 0L},
                       loc('BA11A.py'): {'attrib-starts': [],
        'code-line': '#    Copyright (C) 2019 Greenweaves Software Limited\r'\
                     '\n',
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('BA11D.py'): {'attrib-starts': [],
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 837L,
        'selection_end': 8351L,
        'selection_start': 8351L,
        'zoom': 0L},
                       loc('BA11E.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA11E \tSequence"\
                     " a Peptide ')\r\n",
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 883L,
        'selection_end': 947L,
        'selection_start': 947L,
        'zoom': 0L},
                       loc('BA11F.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA11F \tFind a H"\
                     "ighest-Scoring Peptide in a Proteome against a Spectru"\
                     "m ')\r\n",
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 928L,
        'selection_end': 1037L,
        'selection_start': 1037L,
        'zoom': 0L},
                       loc('BA11G.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA11G \tImplemen"\
                     "t PSMSearch ')\r\n",
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 884L,
        'selection_end': 949L,
        'selection_start': 949L,
        'zoom': 0L},
                       loc('BA11H.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA11H \tCompute "\
                     "the Size of a Spectral Dictionary ')\r\n",
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 906L,
        'selection_end': 993L,
        'selection_start': 993L,
        'zoom': 0L},
                       loc('BA11I.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA11I \tCompute "\
                     "the Probability of a Spectral Dictionary ')\r\n",
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 913L,
        'selection_end': 1007L,
        'selection_start': 1007L,
        'zoom': 0L},
                       loc('BA4M.py'): {'attrib-starts': [],
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 922L,
        'selection_end': 950L,
        'selection_start': 942L,
        'zoom': 0L},
                       loc('BA5A.py'): {'attrib-starts': [('number_of_coins',
        5)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 500L,
        'selection_end': 524L,
        'selection_start': 524L,
        'zoom': 0L},
                       loc('BA5I.py'): {'attrib-starts': [],
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 925L,
        'selection_end': 967L,
        'selection_start': 967L,
        'zoom': 0L},
                       loc('BA5J.py'): {'attrib-starts': [('ba5j',
        19)],
        'first-line': 7L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 827L,
        'selection_end': 852L,
        'selection_start': 845L,
        'zoom': 0L},
                       loc('BA5L.py'): {'attrib-starts': [('alignUsingLinear'\
        'Space|0|',
        33),
        ('alignUsingLinearSpace|0|.MiddleNodeAndEdge|0|',
         46)],
        'code-line': '        ((i1,j1),(i2,j2)) = FindMiddleEdge(v[top:botto'\
                     'm],w[left:right],replace_score=replace_score,indel_cos'\
                     't=indel_cost)\r\n',
        'first-line': 42L,
        'folded-linenos': [],
        'sel-line': 47L,
        'sel-line-start': 1639L,
        'selection_end': 1639L,
        'selection_start': 1639L,
        'zoom': 0L},
                       loc('BA5M.py'): {'attrib-starts': [],
        'code-line': "    s,u,v,w = FindHighestScoringMultipleSequenceAlignm"\
                     "ent('ATATCCG','TCCGA','ATGTACTG')\r\n",
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 24L,
        'sel-line-start': 930L,
        'selection_end': 930L,
        'selection_start': 930L,
        'zoom': 0L},
                       loc('BA6A.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA6A Implement G"\
                     "reedySorting to Sort a Permutation by Reversals')\r\n",
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 31L,
        'sel-line-start': 1147L,
        'selection_end': 1248L,
        'selection_start': 1248L,
        'zoom': 0L},
                       loc('BA6B.py'): {'attrib-starts': [],
        'code-line': "     parser = argparse.ArgumentParser('BA6B Compute th"\
                     "e Number of Breakpoints in a Permutation ')\r\n",
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 27L,
        'sel-line-start': 985L,
        'selection_end': 1080L,
        'selection_start': 1080L,
        'zoom': 0L},
                       loc('BA6C.py'): {'attrib-starts': [],
        'code-line': '        print (d2break([[+1, +2, +3, +4, +5, +6]],\r\n',
        'first-line': 40L,
        'folded-linenos': [],
        'sel-line': 48L,
        'sel-line-start': 1803L,
        'selection_end': 1825L,
        'selection_start': 1818L,
        'zoom': 0L},
                       loc('BA6D.py'): {'attrib-starts': [],
        'code-line': "          Input  = read_strings(f'data/rosalind_{os.pa"\
                     "th.basename(__file__).split(\".\")[0]}.txt')\r\n",
        'first-line': 86L,
        'folded-linenos': [],
        'sel-line': 96L,
        'sel-line-start': 4107L,
        'selection_end': 4203L,
        'selection_start': 4116L,
        'zoom': 0L},
                       loc('BA6F.py'): {'attrib-starts': [],
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 725L,
        'selection_end': 730L,
        'selection_start': 727L,
        'zoom': 0L},
                       loc('BA6G.py'): {'attrib-starts': [],
        'first-line': 14L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 822L,
        'selection_end': 822L,
        'selection_start': 822L,
        'zoom': 0L},
                       loc('BA6H.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 725L,
        'selection_end': 754L,
        'selection_start': 725L,
        'zoom': 0L},
                       loc('BA6J.py'): {'attrib-starts': [],
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('BA6K.py'): {'attrib-starts': [],
        'first-line': 17L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 813L,
        'selection_end': 815L,
        'selection_start': 813L,
        'zoom': 0L},
                       loc('BA7A.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2017-2021 Greenweaves Software Limited'\
                     '\r\n',
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 25L,
        'selection_start': 25L,
        'zoom': 0L},
                       loc('BA7B.py'): {'attrib-starts': [],
        'code-line': '# but WITHOUT ANY WARRANTY; without even the implied w'\
                     'arranty of\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 372L,
        'selection_end': 378L,
        'selection_start': 378L,
        'zoom': 0L},
                       loc('BA7C.py'): {'attrib-starts': [],
        'code-line': '    AdditivePhylogeny(D,n).print_adjacency()\r\n',
        'first-line': 85L,
        'folded-linenos': [],
        'sel-line': 97L,
        'sel-line-start': 3037L,
        'selection_end': 3079L,
        'selection_start': 3064L,
        'zoom': 0L},
                       loc('BA7D.py'): {'attrib-starts': [],
        'first-line': 44L,
        'folded-linenos': [],
        'sel-line': 66L,
        'sel-line-start': 2157L,
        'selection_end': 2241L,
        'selection_start': 2161L,
        'zoom': 0L},
                       loc('BA7E.py'): {'attrib-starts': [],
        'first-line': 69L,
        'folded-linenos': [],
        'sel-line': 89L,
        'sel-line-start': 2990L,
        'selection_end': 3058L,
        'selection_start': 3015L,
        'zoom': 0L},
                       loc('BA7F.py'): {'attrib-starts': [],
        'code-line': '        print_assignments(assignments)\r\n',
        'first-line': 43L,
        'folded-linenos': [],
        'sel-line': 57L,
        'sel-line-start': 2363L,
        'selection_end': 2400L,
        'selection_start': 2400L,
        'zoom': 0L},
                       loc('BA7G.py'): {'attrib-starts': [],
        'code-line': 'from phylogeny import SmallParsimony\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 811L,
        'selection_end': 847L,
        'selection_start': 847L,
        'zoom': 0L},
                       loc('BA8A.py'): {'attrib-starts': [],
        'code-line': '    m = -1\r\n',
        'first-line': 33L,
        'folded-linenos': [],
        'sel-line': 37L,
        'sel-line-start': 1322L,
        'selection_end': 1727L,
        'selection_start': 1322L,
        'zoom': 0L},
                       loc('BA8B.py'): {'attrib-starts': [],
        'first-line': 22L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 1069L,
        'selection_end': 1413L,
        'selection_start': 1072L,
        'zoom': 0L},
                       loc('BA8C.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 5L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 686L,
        'selection_end': 686L,
        'selection_start': 686L,
        'zoom': 0L},
                       loc('BA8D.py'): {'attrib-starts': [],
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 686L,
        'selection_end': 686L,
        'selection_start': 686L,
        'zoom': 0L},
                       loc('BA8E.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 728L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('BA9A.py'): {'attrib-starts': [('convert_trie|0|',
        23)],
        'code-line': 'def convert_trie(Trie):\r\n',
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 23L,
        'sel-line-start': 888L,
        'selection_end': 900L,
        'selection_start': 888L,
        'zoom': 0L},
                       loc('BA9B.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2019-2020 Greenweaves Software Limited'\
                     '\r\n',
        'first-line': 19L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('BA9C.py'): {'attrib-starts': [],
        'code-line': 'from snp import SuffixTree   \r\n',
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 820L,
        'selection_end': 846L,
        'selection_start': 836L,
        'zoom': 0L},
                       loc('BA9D.py'): {'attrib-starts': [],
        'code-line': "        print (FindLongestRepeat('ATATCGTTTTATCGTT'))"\
                     "\r\n",
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 34L,
        'sel-line-start': 1417L,
        'selection_end': 1449L,
        'selection_start': 1432L,
        'zoom': 0L},
                       loc('BA9E.py'): {'attrib-starts': [],
        'code-line': "        print (LongestSharedSubstring('panama',\r\n",
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 1431L,
        'selection_end': 1468L,
        'selection_start': 1446L,
        'zoom': 0L},
                       loc('BA9F.py'): {'attrib-starts': [('FindShortestNonS'\
        'hared|0|',
        23)],
        'code-line': '    #r,p,l = SuffixArray(text,auxiliary=True,padLCP=Tr'\
                     'ue)\r\n',
        'first-line': 17L,
        'folded-linenos': [],
        'sel-line': 34L,
        'sel-line-start': 1349L,
        'selection_end': 1388L,
        'selection_start': 1388L,
        'zoom': 0L},
                       loc('BA9G.py'): {'attrib-starts': [],
        'code-line': 'from   snp import SuffixArray\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 843L,
        'selection_end': 872L,
        'selection_start': 843L,
        'zoom': 0L},
                       loc('BA9H.py'): {'attrib-starts': [],
        'code-line': "        print (MatchPatternsUsingSuffixArray('AATCGGGT"\
                     "TCAATCGGGGT',['ATCG','GGGT']))\r\n",
        'first-line': 17L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 1333L,
        'selection_end': 1377L,
        'selection_start': 1348L,
        'zoom': 0L},
                       loc('BA9I.py'): {'attrib-starts': [],
        'code-line': "    print (BurrowsWheeler('GCGTGCCTGGTCA$'))\r\n",
        'first-line': 7L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 839L,
        'selection_end': 864L,
        'selection_start': 850L,
        'zoom': 0L},
                       loc('BA9J.py'): {'attrib-starts': [],
        'code-line': '        Actual = InverseBWT(Input[0])\r\n',
        'first-line': 22L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1549L,
        'selection_end': 1576L,
        'selection_start': 1566L,
        'zoom': 0L},
                       loc('BA9K.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2020 Greenweaves Software Limited\r\n',
        'first-line': 32L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('BA9L.py'): {'attrib-starts': [],
        'code-line': "    parser.add_argument('--extra',    default=False, a"\
                     "ction='store_true', help='process extra dataset')\r\n",
        'first-line': 19L,
        'folded-linenos': [],
        'sel-line': 28L,
        'sel-line-start': 1090L,
        'selection_end': 1193L,
        'selection_start': 1094L,
        'zoom': 0L},
                       loc('BA9M.py'): {'attrib-starts': [],
        'code-line': '            \r\n',
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 42L,
        'sel-line-start': 1857L,
        'selection_end': 1869L,
        'selection_start': 1869L,
        'zoom': 0L},
                       loc('BA9N.py'): {'attrib-starts': [],
        'code-line': '# BA9N \tFind All Occurrences of a Collection of Patte'\
                     'rns in a String \r\n',
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 716L,
        'selection_end': 785L,
        'selection_start': 716L,
        'zoom': 0L},
                       loc('BA9O.py'): {'attrib-starts': [],
        'code-line': "        Input,Expected  = read_strings('data/MultipleA"\
                     "pproximatePatternMatching.txt',init=0)\r\n",
        'first-line': 31L,
        'folded-linenos': [],
        'sel-line': 44L,
        'sel-line-start': 1905L,
        'selection_end': 1984L,
        'selection_start': 1984L,
        'zoom': 0L},
                       loc('BA9P.py'): {'attrib-starts': [],
        'code-line': '        Coloured = ColourTree({\r\n',
        'first-line': 33L,
        'folded-linenos': [],
        'sel-line': 46L,
        'sel-line-start': 1793L,
        'selection_end': 1822L,
        'selection_start': 1812L,
        'zoom': 0L},
                       loc('BA9Q.py'): {'attrib-starts': [],
        'code-line': '            print (a,b)        \r\n',
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 37L,
        'sel-line-start': 1673L,
        'selection_end': 1703L,
        'selection_start': 1703L,
        'zoom': 0L},
                       loc('BA9R.py'): {'attrib-starts': [],
        'code-line': "                f.write(f'{edge}\\n')\r\n",
        'first-line': 28L,
        'folded-linenos': [],
        'sel-line': 288L,
        'sel-line-start': 11909L,
        'selection_end': 11945L,
        'selection_start': 11925L,
        'zoom': 0L},
                       loc('BINS.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 49L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 879L,
        'selection_end': 879L,
        'selection_start': 879L,
        'zoom': 0L},
                       loc('CORR.py'): {'attrib-starts': [],
        'first-line': 84L,
        'folded-linenos': [],
        'sel-line': 97L,
        'sel-line-start': 3310L,
        'selection_end': 3310L,
        'selection_start': 3310L,
        'zoom': 0L},
                       loc('DBRU.py'): {'attrib-starts': [],
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 23L,
        'sel-line-start': 862L,
        'selection_end': 875L,
        'selection_start': 871L,
        'zoom': 0L},
                       loc('DDEG.py'): {'attrib-starts': [],
        'first-line': 19L,
        'folded-linenos': [],
        'sel-line': 39L,
        'sel-line-start': 1160L,
        'selection_end': 1160L,
        'selection_start': 1160L,
        'zoom': 0L},
                       loc('DEG.py'): {'attrib-starts': [],
                                       'code-line': 'from graphs import deg'\
        '\r\n',
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 15L,
                                       'sel-line-start': 688L,
                                       'selection_end': 710L,
                                       'selection_start': 710L,
                                       'zoom': 0L},
                       loc('FRMT.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 686L,
        'selection_end': 686L,
        'selection_start': 686L,
        'zoom': 0L},
                       loc('GASM.py'): {'attrib-starts': [],
        'first-line': 30L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 719L,
        'selection_end': 722L,
        'selection_start': 722L,
        'zoom': 0L},
                       loc('GBK.py'): {'attrib-starts': [],
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 13L,
                                       'sel-line-start': 617L,
                                       'selection_end': 684L,
                                       'selection_start': 684L,
                                       'zoom': 0L},
                       loc('GLOB.py'): {'attrib-starts': [],
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 955L,
        'selection_end': 971L,
        'selection_start': 971L,
        'zoom': 0L},
                       loc('GREP.py'): {'attrib-starts': [],
        'first-line': 98L,
        'folded-linenos': [],
        'sel-line': 115L,
        'sel-line-start': 3644L,
        'selection_end': 3652L,
        'selection_start': 3652L,
        'zoom': 0L},
                       loc('INS.py'): {'attrib-starts': [],
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 14L,
                                       'sel-line-start': 686L,
                                       'selection_end': 686L,
                                       'selection_start': 686L,
                                       'zoom': 0L},
                       loc('INV.py'): {'attrib-starts': [('inv',
        29),
        ('inv.merge',
         33)],
                                       'first-line': 3L,
                                       'folded-linenos': [],
                                       'sel-line': 50L,
                                       'sel-line-start': 1539L,
                                       'selection_end': 1599L,
                                       'selection_start': 1599L,
                                       'zoom': 0L},
                       loc('KMP.py'): {'attrib-starts': [],
                                       'first-line': 45L,
                                       'folded-linenos': [],
                                       'sel-line': 52L,
                                       'sel-line-start': 1940L,
                                       'selection_end': 1999L,
                                       'selection_start': 1954L,
                                       'zoom': 0L},
                       loc('LONG.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 686L,
        'selection_end': 686L,
        'selection_start': 686L,
        'zoom': 0L},
                       loc('MED.py'): {'attrib-starts': [],
                                       'first-line': 26L,
                                       'folded-linenos': [],
                                       'sel-line': 14L,
                                       'sel-line-start': 686L,
                                       'selection_end': 686L,
                                       'selection_start': 686L,
                                       'zoom': 0L},
                       loc('MER.py'): {'attrib-starts': [],
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 14L,
                                       'sel-line-start': 686L,
                                       'selection_end': 686L,
                                       'selection_start': 686L,
                                       'zoom': 0L},
                       loc('MPRT.py'): {'attrib-starts': [],
        'code-line': '#    Copyright (C) 2020 Simon Crase\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 703L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('MS.py'): {'attrib-starts': [],
                                      'first-line': 0L,
                                      'folded-linenos': [],
                                      'sel-line': 14L,
                                      'sel-line-start': 686L,
                                      'selection_end': 686L,
                                      'selection_start': 686L,
                                      'zoom': 0L},
                       loc('PAR.py'): {'attrib-starts': [('par',
        15)],
                                       'first-line': 18L,
                                       'folded-linenos': [],
                                       'sel-line': 24L,
                                       'sel-line-start': 882L,
                                       'selection_end': 882L,
                                       'selection_start': 882L,
                                       'zoom': 0L},
                       loc('PAR3.py'): {'attrib-starts': [('par3',
        14)],
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 940L,
        'selection_end': 940L,
        'selection_start': 940L,
        'zoom': 0L},
                       loc('PCOV.py'): {'attrib-starts': [],
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 43L,
        'sel-line-start': 1376L,
        'selection_end': 1451L,
        'selection_start': 1404L,
        'zoom': 0L},
                       loc('PTRA.py'): {'attrib-starts': [],
        'code-line': '                translated=translate(coding_dna,table='\
                     'table,to_stop=True)\r\n',
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 28L,
        'sel-line-start': 1053L,
        'selection_end': 1078L,
        'selection_start': 1069L,
        'zoom': 0L},
                       loc('QS.py'): {'attrib-starts': [],
                                      'first-line': 27L,
                                      'folded-linenos': [],
                                      'sel-line': 14L,
                                      'sel-line-start': 686L,
                                      'selection_end': 686L,
                                      'selection_start': 686L,
                                      'zoom': 0L},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': '|mgap|mmgap.py|[Maximizing the Gap Symbols of an Optim'\
                     'al Alignment](http://rosalind.info/problems/mgap/)|\r'\
                     '\n',
        'first-line': 106L,
        'folded-linenos': [],
        'sel-line': 114L,
        'sel-line-start': 10092L,
        'selection_end': 10196L,
        'selection_start': 10196L,
        'zoom': 0L},
                       loc('align.py'): {'attrib-starts': [('edit|0|',
        432)],
        'code-line': 'def edit(s,t,indel_cost=1,replace_cost=lambda a,b: 1,s'\
                     'how_matrix=False):\r\n',
        'first-line': 428L,
        'folded-linenos': [],
        'sel-line': 432L,
        'sel-line-start': 15896L,
        'selection_end': 15904L,
        'selection_start': 15900L,
        'zoom': 0L},
                       loc('alignment.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 110L,
        'selection_end': 157L,
        'selection_start': 126L,
        'zoom': 0L},
                       loc('bf.py'): {'attrib-starts': [],
                                      'code-line': "    parser = argparse.Ar"\
        "gumentParser('BF Bellman-Ford Algorithm')\r\n",
                                      'first-line': 15L,
                                      'folded-linenos': [],
                                      'sel-line': 33L,
                                      'sel-line-start': 1221L,
                                      'selection_end': 1284L,
                                      'selection_start': 1284L,
                                      'zoom': 0L},
                       loc('bfs.py'): {'attrib-starts': [],
                                       'code-line': 'from   graphs  import S'\
        'hortestDistances\r\n',
                                       'first-line': 19L,
                                       'folded-linenos': [],
                                       'sel-line': 21L,
                                       'sel-line-start': 844L,
                                       'selection_end': 883L,
                                       'selection_start': 866L,
                                       'zoom': 0L},
                       loc('bip.py'): {'attrib-starts': [],
                                       'code-line': "    with open(r'C:\\Use"\
        "rs\\Simon\\Downloads\\rosalind_bip(3).txt') as f:\r\n",
                                       'first-line': 6L,
                                       'folded-linenos': [],
                                       'sel-line': 23L,
                                       'sel-line-start': 861L,
                                       'selection_end': 996L,
                                       'selection_start': 861L,
                                       'zoom': 0L},
                       loc('cc.py'): {'attrib-starts': [],
                                      'first-line': 8L,
                                      'folded-linenos': [],
                                      'sel-line': 18L,
                                      'sel-line-start': 781L,
                                      'selection_end': 781L,
                                      'selection_start': 781L,
                                      'zoom': 0L},
                       loc('chbp.py'): {'attrib-starts': [],
        'code-line': '          character_table = [expand(row) for row in In'\
                     'put[1:]]\r\n',
        'first-line': 31L,
        'folded-linenos': [],
        'sel-line': 50L,
        'sel-line-start': 2066L,
        'selection_end': 2128L,
        'selection_start': 2076L,
        'zoom': 0L},
                       loc('cntq.py'): {'attrib-starts': [('q|0|',
        45)],
        'code-line': 'def q(n):\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 45L,
        'sel-line-start': 1791L,
        'selection_end': 1796L,
        'selection_start': 1795L,
        'zoom': 0L},
                       loc('combinatorics.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 65L,
        'sel-line-start': 1874L,
        'selection_end': 1874L,
        'selection_start': 1874L,
        'zoom': 0L},
                       loc('conv.py'): {'attrib-starts': [],
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 860L,
        'selection_end': 872L,
        'selection_start': 868L,
        'zoom': 0L},
                       loc('count-kmer-occurrences.py'): {'attrib-starts': [('r'\
        'everse_complement',
        48)],
        'first-line': 126L,
        'folded-linenos': [],
        'sel-line': 49L,
        'sel-line-start': 1402L,
        'selection_end': 1406L,
        'selection_start': 1406L,
        'zoom': 0L},
                       loc('count-kmers.py'): {'attrib-starts': [],
        'first-line': 126L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 372L,
        'selection_end': 436L,
        'selection_start': 436L,
        'zoom': 0L},
                       loc('count_kmers.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('cset.py'): {'attrib-starts': [],
        'code-line': '            for row in cset(character_table):\r\n',
        'first-line': 33L,
        'folded-linenos': [],
        'sel-line': 41L,
        'sel-line-start': 1768L,
        'selection_end': 1795L,
        'selection_start': 1791L,
        'zoom': 0L},
                       loc('cstr.py'): {'attrib-starts': [],
        'code-line': 'from phylogeny import cstr\r\n',
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 816L,
        'selection_end': 842L,
        'selection_start': 838L,
        'zoom': 0L},
                       loc('cstr1.py'): {'attrib-starts': [],
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 939L,
        'selection_end': 947L,
        'selection_start': 947L,
        'zoom': 0L},
                       loc('ctbl.py'): {'attrib-starts': [],
        'code-line': '        Result = CharacterTable(tree)\r\n',
        'first-line': 22L,
        'folded-linenos': [],
        'sel-line': 43L,
        'sel-line-start': 1693L,
        'selection_end': 1724L,
        'selection_start': 1710L,
        'zoom': 0L},
                       loc('ctbl.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 37L,
        'selection_end': 37L,
        'selection_start': 37L,
        'zoom': 0L},
                       loc('cte.py'): {'attrib-starts': [],
                                       'code-line': 'from graphs import cte'\
        '\r\n',
                                       'first-line': 3L,
                                       'folded-linenos': [],
                                       'sel-line': 15L,
                                       'sel-line-start': 724L,
                                       'selection_end': 735L,
                                       'selection_start': 735L,
                                       'zoom': 0L},
                       loc('ctea.py'): {'attrib-starts': [],
        'code-line': "                                                      "\
                     "   'fasta')]        \r\n",
        'first-line': 19L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1488L,
        'selection_end': 1511L,
        'selection_start': 1511L,
        'zoom': 0L},
                       loc('dag.py'): {'attrib-starts': [],
                                       'first-line': 8L,
                                       'folded-linenos': [],
                                       'sel-line': 22L,
                                       'sel-line-start': 859L,
                                       'selection_end': 912L,
                                       'selection_start': 912L,
                                       'zoom': 0L},
                       loc('dij.py'): {'attrib-starts': [],
                                       'code-line': '       ',
                                       'first-line': 7L,
                                       'folded-linenos': [],
                                       'sel-line': 53L,
                                       'sel-line-start': 2153L,
                                       'selection_end': 2160L,
                                       'selection_start': 2160L,
                                       'zoom': 0L},
                       loc('dna.py'): {'attrib-starts': [],
                                       'code-line': "        Result = ' '.jo"\
        "in(str(i) for i in count_nucleotides(Input[0]))\r\n",
                                       'first-line': 24L,
                                       'folded-linenos': [],
                                       'sel-line': 35L,
                                       'sel-line-start': 1505L,
                                       'selection_end': 1564L,
                                       'selection_start': 1547L,
                                       'zoom': 0L},
                       loc('edit.py'): {'attrib-starts': [],
        'code-line': 'from align import edit\r\n',
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 786L,
        'selection_end': 808L,
        'selection_start': 786L,
        'zoom': 0L},
                       loc('edta.py'): {'attrib-starts': [],
        'code-line': "        d,s,t=edta('PRETTY' ,'PRTTEIN')\r\n",
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 1332L,
        'selection_end': 1350L,
        'selection_start': 1346L,
        'zoom': 0L},
                       loc('eubt.py'): {'attrib-starts': [],
        'code-line': '            for tree in UnrootedBinaryTree.Enumerate(I'\
                     'nput[0].split()):\r\n',
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 36L,
        'sel-line-start': 1580L,
        'selection_end': 1632L,
        'selection_start': 1623L,
        'zoom': 0L},
                       loc('fasta.py'): {'attrib-starts': [('FastaContent|0|',
        21),
        ('FastaContent|0|.__init__|0|',
         23)],
        'code-line': '            self.pairs.append((nn,text))\r\n',
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 38L,
        'sel-line-start': 1572L,
        'selection_end': 1572L,
        'selection_start': 1572L,
        'zoom': 0L},
                       loc('fibo.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 783L,
        'selection_end': 783L,
        'selection_start': 783L,
        'zoom': 0L},
                       loc('foo.py'): {'attrib-starts': [('fitness_align',
        11)],
                                       'first-line': 53L,
                                       'folded-linenos': [],
                                       'sel-line': 25L,
                                       'sel-line-start': 630L,
                                       'selection_end': 649L,
                                       'selection_start': 642L,
                                       'zoom': 0L},
                       loc('fragile.py'): {'attrib-starts': [('d2break|0|',
        94)],
        'code-line': '    Cb= ColouredEdges(b)\r\n',
        'first-line': 138L,
        'folded-linenos': [],
        'sel-line': 157L,
        'sel-line-start': 4765L,
        'selection_end': 4786L,
        'selection_start': 4773L,
        'zoom': 0L},
                       loc('full.py'): {'attrib-starts': [],
        'first-line': 148L,
        'folded-linenos': [],
        'sel-line': 184L,
        'sel-line-start': 4934L,
        'selection_end': 4956L,
        'selection_start': 4956L,
        'zoom': 0L},
                       loc('gaff.py'): {'attrib-starts': [],
        'code-line': '#    along with this program.  If not, see <http://www'\
                     '.gnu.org/licenses/>\r\n',
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 655L,
        'selection_end': 683L,
        'selection_start': 683L,
        'zoom': 0L},
                       loc('gcon.py'): {'attrib-starts': [],
        'code-line': 'from align import san_kai\r\n',
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 821L,
        'selection_end': 846L,
        'selection_start': 846L,
        'zoom': 0L},
                       loc('hdag.py'): {'attrib-starts': [],
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 762L,
        'selection_end': 762L,
        'selection_start': 762L,
        'zoom': 0L},
                       loc('hea.py'): {'attrib-starts': [('heapsort',
        65)],
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 66L,
                                       'sel-line-start': 1715L,
                                       'selection_end': 1727L,
                                       'selection_start': 1727L,
                                       'zoom': 0L},
                       loc('helpers-old.py'): {'attrib-starts': [],
        'first-line': 19L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('helpers.py'): {'attrib-starts': [('expand|0|',
        753)],
        'code-line': '    return [int(c) for c in s]',
        'first-line': 734L,
        'folded-linenos': [],
        'sel-line': 754L,
        'sel-line-start': 22572L,
        'selection_end': 22572L,
        'selection_start': 22572L,
        'zoom': 0L},
                       loc('hiddenmarkov.py'): {'attrib-starts': [('Probabil'\
        'ityOutcomeGivenHiddenPath',
        27)],
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 31L,
        'sel-line-start': 1206L,
        'selection_end': 1224L,
        'selection_start': 1224L,
        'zoom': 0L},
                       loc('hmm.py'): {'attrib-starts': [],
                                       'code-line': '\r\n',
                                       'first-line': 349L,
                                       'folded-linenos': [],
                                       'sel-line': 360L,
                                       'sel-line-start': 12972L,
                                       'selection_end': 12972L,
                                       'selection_start': 12972L,
                                       'zoom': 0L},
                       loc('in.txt'): {'attrib-starts': [],
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 1L,
                                       'sel-line-start': 858L,
                                       'selection_end': 949L,
                                       'selection_start': 949L,
                                       'zoom': 0L},
                       loc('itwv.py'): {'attrib-starts': [],
        'code-line': 'from   align   import itwv\r\n',
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 856L,
        'selection_end': 882L,
        'selection_start': 878L,
        'zoom': 0L},
                       loc('ksim.py'): {'attrib-starts': [('ksim|0|',
        40)],
        'code-line': '   x=0\r\n',
        'first-line': 30L,
        'folded-linenos': [],
        'sel-line': 42L,
        'sel-line-start': 1649L,
        'selection_end': 1649L,
        'selection_start': 1649L,
        'zoom': 0L},
                       loc('laff-pypl.py'): {'attrib-starts': [],
        'code-line': '#   Copyright (C) 2020-2021 Greenweaves Software Limit'\
                     'ed\r\n',
        'first-line': 166L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 7642L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('laff.py'): {'attrib-starts': [('read_fasta|0|',
        146)],
        'code-line': "            if text[0]=='>':\r\n",
        'first-line': 144L,
        'folded-linenos': [],
        'sel-line': 152L,
        'sel-line-start': 6241L,
        'selection_end': 6269L,
        'selection_start': 6269L,
        'zoom': 0L},
                       loc('lalign.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('lcsq.py'): {'attrib-starts': [('lcsq',
        20),
        ('lcsq.dynamic_programming',
         21),
        ('lcsq.dynamic_programming.extract',
         30)],
        'first-line': 63L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1462L,
        'selection_end': 1519L,
        'selection_start': 1519L,
        'zoom': 0L},
                       loc('ling.py'): {'attrib-starts': [],
        'code-line': 'from   ukkonen import build,Node\r\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 859L,
        'selection_end': 873L,
        'selection_start': 866L,
        'zoom': 0L},
                       loc('loca.py'): {'attrib-starts': [],
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 24L,
        'sel-line-start': 1056L,
        'selection_end': 1079L,
        'selection_start': 1079L,
        'zoom': 0L},
                       loc('lrep.py'): {'attrib-starts': [('lrep|0|',
        23)],
        'code-line': '                while m<  len(strings) and strings[ind'\
                     'ices[m]]==candidate:\r\n',
        'first-line': 40L,
        'folded-linenos': [],
        'sel-line': 83L,
        'sel-line-start': 2944L,
        'selection_end': 2969L,
        'selection_start': 2969L,
        'zoom': 0L},
                       loc('maj.py'): {'attrib-starts': [],
                                       'first-line': 28L,
                                       'folded-linenos': [],
                                       'sel-line': 36L,
                                       'sel-line-start': 1133L,
                                       'selection_end': 1154L,
                                       'selection_start': 1154L,
                                       'zoom': 0L},
                       loc('mend.py'): {'attrib-starts': [],
        'code-line': '        tree,_ = newick_parser.parse(Input[0])\r\n',
        'first-line': 22L,
        'folded-linenos': [],
        'sel-line': 38L,
        'sel-line-start': 1581L,
        'selection_end': 1604L,
        'selection_start': 1598L,
        'zoom': 0L},
                       loc('mgap.py'): {'attrib-starts': [],
        'code-line': "            f.write(f'{Result}\\n')\r\n",
        'first-line': 78L,
        'folded-linenos': [],
        'sel-line': 99L,
        'sel-line-start': 3943L,
        'selection_end': 3972L,
        'selection_start': 3972L,
        'zoom': 0L},
                       loc('mrep.py'): {'attrib-starts': [],
        'code-line': 'from   snp     import SuffixArray,mrep\r\n',
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 832L,
        'selection_end': 842L,
        'selection_start': 839L,
        'zoom': 0L},
                       loc('newick.py'): {'attrib-starts': [('newick_to_adja'\
        'cency_list|0|',
        172)],
        'code-line': 'def newick_to_adjacency_list(T,return_root=False):\r\n',
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 172L,
        'sel-line-start': 5895L,
        'selection_end': 5923L,
        'selection_start': 5899L,
        'zoom': 0L},
                       loc('nwc.py'): {'attrib-starts': [],
                                       'code-line': "    parser = argparse.A"\
        "rgumentParser('NWC Negative Weight Cycle')\r\n",
                                       'first-line': 5L,
                                       'folded-linenos': [],
                                       'sel-line': 49L,
                                       'sel-line-start': 1749L,
                                       'selection_end': 1812L,
                                       'selection_start': 1812L,
                                       'zoom': 0L},
                       loc('nwck.py'): {'attrib-starts': [('get_path|0|',
        30)],
        'code-line': 'def get_path(clade):\r\n',
        'first-line': 41L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 1058L,
        'selection_end': 1070L,
        'selection_start': 1062L,
        'zoom': 0L},
                       loc('oap.py'): {'attrib-starts': [],
                                       'code-line': "        Data      = rea"\
        "d_fasta(f'data/rosalind_{os.path.basename(__file__).split(\".\")[0]"\
        "}.txt')          \r\n",
                                       'first-line': 78L,
                                       'folded-linenos': [],
                                       'sel-line': 97L,
                                       'sel-line-start': 3683L,
                                       'selection_end': 3778L,
                                       'selection_start': 3691L,
                                       'zoom': 0L},
                       loc('orfr.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 194L,
        'selection_end': 224L,
        'selection_start': 224L,
        'zoom': 0L},
                       loc('osym.py'): {'attrib-starts': [('osym|0|',
        35),
        ('osym|0|.get_score|0|',
         36)],
        'code-line': '  def get_score(a,b, match=1,mismatch=-1):\r\n',
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 36L,
        'sel-line-start': 1565L,
        'selection_end': 1736L,
        'selection_start': 1565L,
        'zoom': 0L},
                       loc('pdpl.py'): {'attrib-starts': [],
        'code-line': "    print (f'Elapsed Time {minutes} m {seconds:.2f} s'"\
                     ")    \r\n",
        'first-line': 76L,
        'folded-linenos': [],
        'sel-line': 99L,
        'sel-line-start': 3668L,
        'selection_end': 3677L,
        'selection_start': 3672L,
        'zoom': 0L},
                       loc('phylogeny.py'): {'attrib-starts': [],
        'code-line': 'from   numpy    import argmin,argmax\r\n',
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 918L,
        'selection_end': 945L,
        'selection_start': 941L,
        'zoom': 0L},
                       loc('prsm.py'): {'attrib-starts': [],
        'code-line': '    print (m)\r\n',
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 39L,
        'sel-line-start': 1149L,
        'selection_end': 1158L,
        'selection_start': 1153L,
        'zoom': 0L},
                       loc('ps.py'): {'attrib-starts': [('ps',
        20)],
                                      'first-line': 10L,
                                      'folded-linenos': [],
                                      'sel-line': 27L,
                                      'sel-line-start': 949L,
                                      'selection_end': 979L,
                                      'selection_start': 979L,
                                      'zoom': 0L},
                       loc('qrt.py'): {'attrib-starts': [],
                                       'code-line': '# Copyright (C) 2020 Gr'\
        'eenweaves Software Limited\r\n',
                                       'first-line': 16L,
                                       'folded-linenos': [],
                                       'sel-line': 0L,
                                       'sel-line-start': 0L,
                                       'selection_end': 0L,
                                       'selection_start': 0L,
                                       'zoom': 0L},
                       loc('qrtd.py'): {'attrib-starts': [('qrtd|0|',
        100)],
        'code-line': '    #return len(quartets1) + len(quartets2) - 2*get_ma'\
                     'tches(quartets1,quartets2)\r\n',
        'first-line': 102L,
        'folded-linenos': [],
        'sel-line': 122L,
        'sel-line-start': 3885L,
        'selection_end': 3886L,
        'selection_start': 3886L,
        'zoom': 0L},
                       loc('rear.py'): {'attrib-starts': [],
        'code-line': '                d,_ = sort(original,parse(line))\r\n',
        'first-line': 5L,
        'folded-linenos': [],
        'sel-line': 53L,
        'sel-line-start': 1662L,
        'selection_end': 1703L,
        'selection_start': 1698L,
        'zoom': 0L},
                       loc('reference_tables.py'): {'attrib-starts': [],
        'code-line': '#\r\n',
        'first-line': 133L,
        'folded-linenos': [],
        'sel-line': 139L,
        'sel-line-start': 5288L,
        'selection_end': 5289L,
        'selection_start': 5289L,
        'zoom': 0L},
                       loc('reformat.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 240L,
        'selection_end': 272L,
        'selection_start': 272L,
        'zoom': 0L},
                       loc('revp.py'): {'attrib-starts': [],
        'code-line': "        for a,b in revp(FastaContent(['>Rosalind_24','"\
                     "TCAATGCATGCGGGTCTATATGCAT'])):\r\n",
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 31L,
        'sel-line-start': 1292L,
        'selection_end': 1315L,
        'selection_start': 1311L,
        'zoom': 0L},
                       loc('rosalind-old.py'): {'attrib-starts': [('TestRosa'\
        'lind',
        2523),
        ('TestRosalind.test_ba5n',
         3462)],
        'first-line': 3456L,
        'folded-linenos': [],
        'sel-line': 3464L,
        'sel-line-start': 136759L,
        'selection_end': 136804L,
        'selection_start': 136788L,
        'zoom': 0L},
                       loc('rosalind.py'): {'attrib-starts': [('revp|0|',
        938)],
        'code-line': '            \r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 963L,
        'sel-line-start': 33674L,
        'selection_end': 33686L,
        'selection_start': 33686L,
        'zoom': 0L},
                       loc('rosalind_old.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 63L,
        'sel-line-start': 1898L,
        'selection_end': 1898L,
        'selection_start': 1898L,
        'zoom': 0L},
                       loc('rsub.py'): {'attrib-starts': [],
        'code-line': "        for reverse in rsub('(((ostrich,cat)rat,mouse)"\
                     "dog,elephant)robot;',\r\n",
        'first-line': 76L,
        'folded-linenos': [],
        'sel-line': 39L,
        'sel-line-start': 1587L,
        'selection_end': 1614L,
        'selection_start': 1610L,
        'zoom': 0L},
                       loc('sc.py'): {'attrib-starts': [],
                                      'first-line': 27L,
                                      'folded-linenos': [],
                                      'sel-line': 34L,
                                      'sel-line-start': 1025L,
                                      'selection_end': 1038L,
                                      'selection_start': 1038L,
                                      'zoom': 0L},
                       loc('scc.py'): {'attrib-starts': [],
                                       'code-line': "    parser = argparse.A"\
        "rgumentParser('SCC Strongly Connected Component')\r\n",
                                       'first-line': 13L,
                                       'folded-linenos': [],
                                       'sel-line': 26L,
                                       'sel-line-start': 930L,
                                       'selection_end': 1000L,
                                       'selection_start': 1000L,
                                       'zoom': 0L},
                       loc('sdag.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('SDAG Shortest Pa"\
                     "ths in DAG')\r\n",
        'first-line': 38L,
        'folded-linenos': [],
        'sel-line': 47L,
        'sel-line-start': 1386L,
        'selection_end': 1450L,
        'selection_start': 1450L,
        'zoom': 0L},
                       loc('sgra.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 836L,
        'selection_end': 851L,
        'selection_start': 847L,
        'zoom': 0L},
                       loc('sims.py'): {'attrib-starts': [],
        'code-line': 'from   align import sims\r\n',
        'first-line': 14L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 818L,
        'selection_end': 842L,
        'selection_start': 838L,
        'zoom': 0L},
                       loc('smgb.py'): {'attrib-starts': [],
        'code-line': 'from   fasta import FastaContent\r\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 853L,
        'selection_end': 885L,
        'selection_start': 853L,
        'zoom': 0L},
                       loc('snp.py'): {'attrib-starts': [('PartialSuffixArra'\
        'y|0|',
        610)],
                                       'code-line': 'def PartialSuffixArray('\
        'String,K) :\r\n',
                                       'first-line': 597L,
                                       'folded-linenos': [],
                                       'sel-line': 610L,
                                       'sel-line-start': 21929L,
                                       'selection_end': 21951L,
                                       'selection_start': 21933L,
                                       'zoom': 0L},
                       loc('sort.py'): {'attrib-starts': [],
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 758L,
        'selection_end': 758L,
        'selection_start': 758L,
        'zoom': 0L},
                       loc('spectrum.py'): {'attrib-starts': [('get_abbrev|0'\
        '|',
        204)],
        'code-line': '    m1    = masses[index]\r\n',
        'first-line': 114L,
        'folded-linenos': [],
        'sel-line': 206L,
        'sel-line-start': 7257L,
        'selection_end': 7257L,
        'selection_start': 7257L,
        'zoom': 0L},
                       loc('sptb.py'): {'attrib-starts': [],
        'code-line': '    elapsed = time.time()-start\r\n',
        'first-line': 28L,
        'folded-linenos': [],
        'sel-line': 47L,
        'sel-line-start': 1776L,
        'selection_end': 1807L,
        'selection_start': 1807L,
        'zoom': 0L},
                       loc('sptd.py'): {'attrib-starts': [],
        'code-line': '        Result = sptd(Input[0].split(), Input[1], Inpu'\
                     't[2])\r\n',
        'first-line': 28L,
        'folded-linenos': [],
        'sel-line': 40L,
        'sel-line-start': 1673L,
        'selection_end': 1694L,
        'selection_start': 1690L,
        'zoom': 0L},
                       loc('sq.py'): {'attrib-starts': [],
                                      'code-line': '# SQ Square in a Graph\r'\
        '\n',
                                      'first-line': 3L,
                                      'folded-linenos': [],
                                      'sel-line': 15L,
                                      'sel-line-start': 724L,
                                      'selection_end': 746L,
                                      'selection_start': 729L,
                                      'zoom': 0L},
                       loc('subo.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('suff.py'): {'attrib-starts': [],
        'code-line': "        for substring in suff('ATAAATG$'):\r\n",
        'first-line': 23L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 1225L,
        'selection_end': 1254L,
        'selection_start': 1250L,
        'zoom': 0L},
                       loc('template.py'): {'attrib-starts': [],
        'code-line': '    args = parser.parse_args()\r\n',
        'first-line': 24L,
        'folded-linenos': [],
        'sel-line': 28L,
        'sel-line-start': 1154L,
        'selection_end': 1169L,
        'selection_start': 1169L,
        'zoom': 0L},
                       loc('tree.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2020 Greenweaves Software Limited\r\n',
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('trie.py'): {'attrib-starts': [],
        'code-line': "        Trie = create_trie(['ATAGA', 'ATC', 'GAT'])\r"\
                     "\n",
        'first-line': 17L,
        'folded-linenos': [],
        'sel-line': 36L,
        'sel-line-start': 1412L,
        'selection_end': 1463L,
        'selection_start': 1420L,
        'zoom': 0L},
                       loc('ts.py'): {'attrib-starts': [],
                                      'code-line': '          t = topologica'\
        'l_order(adj)\r\n',
                                      'first-line': 14L,
                                      'folded-linenos': [],
                                      'sel-line': 29L,
                                      'sel-line-start': 1146L,
                                      'selection_end': 1177L,
                                      'selection_start': 1160L,
                                      'zoom': 0L},
                       loc('tyrocidine.py'): {'attrib-starts': [('sequence|0'\
        '|',
        22)],
        'code-line': '     masses,pairs = create_lookup();\r\n',
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 28L,
        'sel-line-start': 1098L,
        'selection_end': 1098L,
        'selection_start': 1098L,
        'zoom': 0L},
                       loc('ukkonen.py'): {'attrib-starts': [('build|0|',
        111)],
        'code-line': 'def build(chars, regularize=False):\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 111L,
        'sel-line-start': 3573L,
        'selection_end': 3600L,
        'selection_start': 3590L,
        'zoom': 0L},
                       loc('../cluster/fcs_params.py'): {'attrib-starts': [],
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../learn/motifs.py'): {'attrib-starts': [],
        'code-line': "    plt.savefig(os.path.basename(__file__).split('.')["\
                     "0] )\r\n",
        'first-line': 179L,
        'folded-linenos': [],
        'sel-line': 197L,
        'sel-line-start': 7575L,
        'selection_end': 7632L,
        'selection_start': 7591L,
        'zoom': 0L},
                       loc('file:d:/root/projects/Genera Biosystems/Development/source/scripts/extract-fcs-file-details.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('file:d:/root/projects/Genera Biosystems/Development/source/scripts/extract-fcs-params.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
search.replace-history = [u't',
                          u's',
                          u'i-1',
                          u'i',
                          u', ',
                          u'product',
                          u'table',
                          u'N_STATES',
                          u'getCount',
                          u'getFirstOccurrence',
                          u'unlink',
                          u'pop',
                          u'trace',
                          u'gather_edge_labels',
                          u'find_attachment_point',
                          u'suffix',
                          u'expand',
                          u'ToBeProcessed',
                          u']',
                          u'[']
search.search-history = [u'findEncodings',
                         u'matrix',
                         u'w',
                         u'v',
                         u'i_from',
                         u'i_to',
                         u'blosum',
                         u' ',
                         u'b',
                         u'count',
                         u'argm',
                         u'argmax',
                         u'np.',
                         u'cset',
                         u'signed',
                         u'print',
                         u'CountChars',
                         u'ConstructProfileHMM',
                         u'record_transition',
                         u'should']
