#!wing
#!version=9.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('2sat.py'),
                  loc('2sum.py'),
                  loc('3sum.py'),
                  loc('align.py'),
                  loc('alph.py'),
                  loc('ASMQ.py'),
                  loc('BA4M.py'),
                  loc('BA5H.py'),
                  loc('BA5I.py'),
                  loc('BA5J.py'),
                  loc('BA5K.py'),
                  loc('BA5L.py'),
                  loc('BA5M.py'),
                  loc('BA6A.py'),
                  loc('BA6B.py'),
                  loc('BA6C.py'),
                  loc('BA6D.py'),
                  loc('BA6F.py'),
                  loc('BA6G.py'),
                  loc('BA6H.py'),
                  loc('BA6I.py'),
                  loc('BA6J.py'),
                  loc('BA6K.py'),
                  loc('BA7A.py'),
                  loc('BA7B.py'),
                  loc('BA7C.py'),
                  loc('BA7D.py'),
                  loc('BA7E.py'),
                  loc('BA7F.py'),
                  loc('BA7G.py'),
                  loc('BA8A.py'),
                  loc('BA8B.py'),
                  loc('BA8C.py'),
                  loc('BA8D.py'),
                  loc('BA8E.py'),
                  loc('BA9A.py'),
                  loc('BA9B.py'),
                  loc('BA9C.py'),
                  loc('BA9D.py'),
                  loc('BA9E.py'),
                  loc('BA9F.py'),
                  loc('BA9G.py'),
                  loc('BA9H.py'),
                  loc('BA9I.py'),
                  loc('BA9J.py'),
                  loc('BA9K.py'),
                  loc('BA9L.py'),
                  loc('BA9M.py'),
                  loc('BA9N.py'),
                  loc('BA9O.py'),
                  loc('BA9P.py'),
                  loc('BA9Q.py'),
                  loc('BA9R.py'),
                  loc('BA10A.py'),
                  loc('BA10B.py'),
                  loc('BA10C.py'),
                  loc('BA10D.py'),
                  loc('BA10E.py'),
                  loc('BA10F.py'),
                  loc('BA10G.py'),
                  loc('BA10H.py'),
                  loc('BA10I.py'),
                  loc('BA10J.py'),
                  loc('BA10K.py'),
                  loc('BA11A.py'),
                  loc('BA11B.py'),
                  loc('BA11C.py'),
                  loc('BA11D.py'),
                  loc('BA11E.py'),
                  loc('BA11F.py'),
                  loc('BA11G.py'),
                  loc('BA11H.py'),
                  loc('BA11I.py'),
                  loc('BA11J.py'),
                  loc('bf.py'),
                  loc('bfs.py'),
                  loc('BINS.py'),
                  loc('bip.py'),
                  loc('cat.py'),
                  loc('cc.py'),
                  loc('chbp.py'),
                  loc('cntq.py'),
                  loc('combinatorics.py'),
                  loc('conv.py'),
                  loc('CORR.py'),
                  loc('count_kmers.py'),
                  loc('cset.py'),
                  loc('cstr.py'),
                  loc('ctbl.py'),
                  loc('cte.py'),
                  loc('ctea.py'),
                  loc('dag.py'),
                  loc('DBRU.py'),
                  loc('DDEG.py'),
                  loc('DEG.py'),
                  loc('dij.py'),
                  loc('dna.py'),
                  loc('edit.py'),
                  loc('edta.py'),
                  loc('eubt.py'),
                  loc('fasta.py'),
                  loc('fibo.py'),
                  loc('fragile.py'),
                  loc('FRMT.py'),
                  loc('full.py'),
                  loc('gaff.py'),
                  loc('GBK.py'),
                  loc('gcon.py'),
                  loc('GLOB.py'),
                  loc('graphs.py'),
                  loc('GREP.py'),
                  loc('gs.py'),
                  loc('hdag.py'),
                  loc('hea.py'),
                  loc('helpers.py'),
                  loc('INS.py'),
                  loc('INV.py'),
                  loc('itwv.py'),
                  loc('KMP.py'),
                  loc('ksim.py'),
                  loc('laff.py'),
                  loc('lcsq.py'),
                  loc('ling.py'),
                  loc('loca.py'),
                  loc('LONG.py'),
                  loc('lrep.py'),
                  loc('maj.py'),
                  loc('MED.py'),
                  loc('mend.py'),
                  loc('MER.py'),
                  loc('mgap.py'),
                  loc('mmch.py'),
                  loc('motz.py'),
                  loc('MPRT.py'),
                  loc('mrep.py'),
                  loc('MS.py'),
                  loc('mult.py'),
                  loc('newick.py'),
                  loc('nwc.py'),
                  loc('nwck.py'),
                  loc('oap.py'),
                  loc('orfr.py'),
                  loc('osym.py'),
                  loc('PAR3.py'),
                  loc('PAR.py'),
                  loc('PCOV.py'),
                  loc('pdpl.py'),
                  loc('phylogeny.py'),
                  loc('pmch.py'),
                  loc('prsm.py'),
                  loc('ps.py'),
                  loc('PTRA.py'),
                  loc('qrt.py'),
                  loc('qrtd.py'),
                  loc('QS.py'),
                  loc('README.md'),
                  loc('rear.py'),
                  loc('reference_tables.py'),
                  loc('revp.py'),
                  loc('rna.py'),
                  loc('rnas.py'),
                  loc('rosalind.py'),
                  loc('rsub.py'),
                  loc('sc.py'),
                  loc('scc.py'),
                  loc('scsp.py'),
                  loc('sdag.py'),
                  loc('sgra.py'),
                  loc('sims.py'),
                  loc('smgb.py'),
                  loc('snp.py'),
                  loc('sort.py'),
                  loc('spec.py'),
                  loc('spectrum.py'),
                  loc('sptd.py'),
                  loc('sq.py'),
                  loc('suff.py'),
                  loc('template.py'),
                  loc('tree.py'),
                  loc('trie.py'),
                  loc('ts.py'),
                  loc('tyrocidine.py'),
                  loc('ukkonen.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('2sat.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('BA10D.py'): ('project',
        ('--sample',
         '')),
                      loc('BA10E.py'): ('project',
        ('--rosalind',
         '')),
                      loc('BA10F.py'): ('project',
        ('--sample',
         '')),
                      loc('BA10H.py'): ('project',
        ('--rosalind',
         '')),
                      loc('BA10J.py'): ('project',
        ('--sample',
         '')),
                      loc('BA5K.py'): ('project',
                                       ('--sample',
        '')),
                      loc('BA5L.py'): ('project',
                                       ('--sample',
        '')),
                      loc('BA6A.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('BA6B.py'): ('project',
                                       ('--sample',
        '')),
                      loc('BA6C.py'): ('project',
                                       ('--sample',
        '')),
                      loc('BA6D.py'): ('project',
                                       ('--sample',
        '')),
                      loc('BA7F.py'): ('project',
                                       ('--sample',
        '')),
                      loc('BA9A.py'): ('project',
                                       ('--sample',
        '')),
                      loc('BA9B.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('BA9C.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('BA9D.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('BA9E.py'): ('project',
                                       ('--extra',
        '')),
                      loc('BA9F.py'): ('project',
                                       ('--extra',
        '')),
                      loc('BA9G.py'): ('project',
                                       ('--sample',
        '')),
                      loc('BA9H.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('BA9J.py'): ('project',
                                       ('--extra',
        '')),
                      loc('BA9K.py'): ('project',
                                       ('--extra',
        '')),
                      loc('BA9L.py'): ('project',
                                       ('--extra',
        '')),
                      loc('BA9M.py'): ('project',
                                       ('--extra',
        '')),
                      loc('BA9N.py'): ('project',
                                       ('--extra',
        '')),
                      loc('BA9O.py'): ('project',
                                       ('--sample',
        '')),
                      loc('BA9P.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('BA9Q.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('BA9R.py'): ('project',
                                       ('--banana --trace',
        '')),
                      loc('BINS.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('MPRT.py'): ('project',
                                       ('rosalind_mprt.txt --path C:\\Users\\Simon\\Downloads --output foo.txt',
        '')),
                      loc('alph.py'): ('project',
                                       ('--sample',
        '')),
                      loc('bf.py'): ('project',
                                     ('--sample',
                                      '')),
                      loc('bfs.py'): ('project',
                                      ('--sample',
                                       '')),
                      loc('cat.py'): ('project',
                                      ('--sample',
                                       '')),
                      loc('chbp.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('cntq.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('combinatorics.py'): ('project',
        ('--sample',
         '')),
                      loc('cset.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('cstr.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('ctbl.py'): ('project',
                                       ('--sample',
        '')),
                      loc('ctea.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('dij.py'): ('project',
                                      ('--sample',
                                       '')),
                      loc('dna.py'): ('project',
                                      ('--rosalind',
                                       '')),
                      loc('edta.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('eubt.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('fibo.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('gcon.py'): ('project',
                                       ('--test',
        '')),
                      loc('itwv.py'): ('project',
                                       ('--sample',
        '')),
                      loc('ksim.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('laff-pypl.py'): ('project',
        ('--rosalind',
         '')),
                      loc('laff.py'): ('project',
                                       ('--sample',
        '')),
                      loc('lalign.py'): ('project',
        ('--email simon@greenweaves.nz --stype dna --expthr 0.1 --asequence GACTCCTTTGTTTGCCTTAAATAGATACATATTTACTCTTGACTCTTTTGTTGGCCTTAAATAGATACATATTTGTGCGACTCCACGAGTGATTCGTA --bsequence ATGGACTCCTTTGTTTGCCTTAAATAGATACATATTCAACAAGTGTGCACTTAGCCTTGCCGACTCCTTTGTTTGCCTTAAATAGATACATATTTG',
         '')),
                      loc('ling.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('lrep.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('mend.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('mgap.py'): ('project',
                                       ('--sample',
        '')),
                      loc('mmch.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('motz.py'): ('project',
                                       ('--sample',
        '')),
                      loc('mrep.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('mult.py'): ('project',
                                       ('--sample',
        '')),
                      loc('nwc.py'): ('project',
                                      ('--rosalind',
                                       '')),
                      loc('oap.py'): ('project',
                                      ('--sample',
                                       '')),
                      loc('osym.py'): ('project',
                                       ('--sample',
        '')),
                      loc('pdpl.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('phylogeny.py'): ('project',
        ('--sample',
         '')),
                      loc('pmch.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('qrt.py'): ('project',
                                      ('--rosalind',
                                       '')),
                      loc('qrtd.py'): ('project',
                                       ('--sample',
        '')),
                      loc('revp.py'): ('project',
                                       ('--sample',
        '')),
                      loc('rna.py'): ('project',
                                      ('--sample',
                                       '')),
                      loc('rnas.py'): ('project',
                                       ('--sample',
        '')),
                      loc('rsub.py'): ('project',
                                       ('--sample',
        '')),
                      loc('scc.py'): ('project',
                                      ('--sample',
                                       '')),
                      loc('sdag.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('sims.py'): ('project',
                                       ('--sample',
        '')),
                      loc('smgb.py'): ('project',
                                       ('--sample',
        '')),
                      loc('sptd.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('subo.py'): ('project',
                                       ('--sample',
        '')),
                      loc('suff.py'): ('project',
                                       ('--sample',
        '')),
                      loc('template.py'): ('project',
        ('--sample',
         '')),
                      loc('tree.py'): ('project',
                                       ('--rosalind',
        '')),
                      loc('trie.py'): ('project',
                                       ('--sample',
        ''))}
[user attributes]
debug.err-values = {loc('BA5H.py'): {},
                    loc('cte.py'): {}}
debug.recent-run-args = {loc('2sat.py'): ['--rosalind',
        '--sample',
        '-rosalind'],
                         loc('BA10D.py'): ['--sample',
        '--rosalind',
        '--extra'],
                         loc('BA10E.py'): ['--rosalind',
        '--rosalind --precision 12',
        '--extra',
        '--rosalind --precision 3',
        '--rosalind precision=3',
        '--text',
        '--sample',
        '--rosalind  --precision 3 --trace',
        '--sample  --precision 3 --trace',
        '--rosalind  --precision 3',
        '--text --trace',
        '--text --precision 5',
        '--text precision 5'],
                         loc('BA10F.py'): ['--sample'],
                         loc('BA10H.py'): ['--rosalind',
        '--extra',
        '--sample'],
                         loc('BA10J.py'): ['--sample'],
                         loc('BA5K.py'): ['--sample',
        '--align',
        '--extra'],
                         loc('BA5L.py'): ['--sample',
        '--extra'],
                         loc('BA6A.py'): ['--rosalind',
        '--sample'],
                         loc('BA6B.py'): ['--sample',
        '--rosalind'],
                         loc('BA6C.py'): ['--sample',
        '--rosalind'],
                         loc('BA6D.py'): ['--sample'],
                         loc('BA7F.py'): ['--sample'],
                         loc('BA9A.py'): ['--sample',
        '--rosalind',
        '--extra'],
                         loc('BA9B.py'): ['--rosalind',
        '--extra',
        '--sample'],
                         loc('BA9C.py'): ['--rosalind',
        '--extra',
        '--sample'],
                         loc('BA9D.py'): ['--rosalind',
        '--extra',
        '--sample'],
                         loc('BA9E.py'): ['--extra',
        '--sample',
        '--rosalind'],
                         loc('BA9F.py'): ['--extra',
        '--sample'],
                         loc('BA9G.py'): ['--sample',
        '--rosalind',
        '--extra'],
                         loc('BA9H.py'): ['--rosalind',
        '--sample'],
                         loc('BA9J.py'): ['--extra',
        '--sample',
        '--rosalind'],
                         loc('BA9K.py'): ['--extra',
        '--sample',
        '--rosalind'],
                         loc('BA9L.py'): ['--extra',
        '--sample',
        '--rosalind'],
                         loc('BA9M.py'): ['--extra',
        '--sample',
        '--rosalind'],
                         loc('BA9N.py'): ['--extra',
        '--sample',
        '--panama',
        '--banana'],
                         loc('BA9O.py'): ['--sample'],
                         loc('BA9P.py'): ['--rosalind',
        '--sample',
        '--extra'],
                         loc('BA9Q.py'): ['--rosalind',
        '--extra',
        '--sample'],
                         loc('BA9R.py'): ['--banana --trace',
        '--banana',
        '--banana  --trace',
        '--banana  --debug',
        '--sample --debug',
        '--sample',
        '--extra',
        '--debug --extra',
        '--debug',
        '--extra --debug',
        '--rosalind'],
                         loc('BINS.py'): ['--rosalind',
        '--sample'],
                         loc('MPRT.py'): ['rosalind_mprt.txt --path C:\\Users\\Simon\\Downloads --output foo.txt',
        'rosalind_mprt_2.txt --output foo.txt',
        'rosalind_mprt_2.txt'],
                         loc('align.py'): ['--sample'],
                         loc('alph.py'): ['--sample',
        '--rosalind'],
                         loc('bf.py'): ['--sample',
        '--rosalind'],
                         loc('bfs.py'): ['--sample',
        '--rosalind'],
                         loc('cat.py'): ['--sample',
        '--rosalind'],
                         loc('chbp.py'): ['--rosalind',
        '--abcde',
        '--sample'],
                         loc('cntq.py'): ['--rosalind',
        '--sample'],
                         loc('combinatorics.py'): ['--sample'],
                         loc('cset.py'): ['--rosalind',
        '--sample',
        '--align'],
                         loc('cstr.py'): ['--rosalind',
        '--sample'],
                         loc('ctbl.py'): ['--sample',
        '--rosalind'],
                         loc('ctea.py'): ['--rosalind',
        '--sample'],
                         loc('dij.py'): ['--sample',
        '--rosalind'],
                         loc('dna.py'): ['--rosalind',
        '--sample'],
                         loc('edta.py'): ['--rosalind',
        '--sample'],
                         loc('eubt.py'): ['--rosalind',
        '--sample'],
                         loc('fibo.py'): ['--rosalind',
        '--sample'],
                         loc('gcon.py'): ['--test',
        '--sample',
        '--test 5',
        'WWW DNP',
        '--test 4',
        '--test 3',
        '--test 2',
        '--test 1',
        'foo bar baz'],
                         loc('itwv.py'): ['--sample'],
                         loc('ksim.py'): ['--rosalind',
        '--sample'],
                         loc('laff-pypl.py'): ['--rosalind',
        '--sample'],
                         loc('laff.py'): ['--sample',
        '--rosalind'],
                         loc('lalign.py'): ['--email simon@greenweaves.nz --stype dna --expthr 0.1 --asequence GACTCCTTTGTTTGCCTTAAATAGATACATATTTACTCTTGACTCTTTTGTTGGCCTTAAATAGATACATATTTGTGCGACTCCACGAGTGATTCGTA --bsequence ATGGACTCCTTTGTTTGCCTTAAATAGATACATATTCAACAAGTGTGCACTTAGCCTTGCCGACTCCTTTGTTTGCCTTAAATAGATACATATTTG',
        '--email simon@greenweaves.nz --stype dna --expthr 0.1 -asequence GACTCCTTTGTTTGCCTTAAATAGATACATATTTACTCTTGACTCTTTTGTTGGCCTTAAATAGATACATATTTGTGCGACTCCACGAGTGATTCGTA --bsequence ATGGACTCCTTTGTTTGCCTTAAATAGATACATATTCAACAAGTGTGCACTTAGCCTTGCCGACTCCTTTGTTTGCCTTAAATAGATACATATTTG',
        '--email simon@greenweaves.nz --stype dna ---expthr 0.1 -asequence GACTCCTTTGTTTGCCTTAAATAGATACATATTTACTCTTGACTCTTTTGTTGGCCTTAAATAGATACATATTTGTGCGACTCCACGAGTGATTCGTA --bsequence ATGGACTCCTTTGTTTGCCTTAAATAGATACATATTCAACAAGTGTGCACTTAGCCTTGCCGACTCCTTTGTTTGCCTTAAATAGATACATATTTG',
        '--email simon@greenweaves.nz --stype dna --asequence GACTCCTTTGTTTGCCTTAAATAGATACATATTTACTCTTGACTCTTTTGTTGGCCTTAAATAGATACATATTTGTGCGACTCCACGAGTGATTCGTA --bsequence ATGGACTCCTTTGTTTGCCTTAAATAGATACATATTCAACAAGTGTGCACTTAGCCTTGCCGACTCCTTTGTTTGCCTTAAATAGATACATATTTG',
        '--email simon@greenweaves.nz --stype DNA --asequence GACTCCTTTGTTTGCCTTAAATAGATACATATTTACTCTTGACTCTTTTGTTGGCCTTAAATAGATACATATTTGTGCGACTCCACGAGTGATTCGTA --bsequence ATGGACTCCTTTGTTTGCCTTAAATAGATACATATTCAACAAGTGTGCACTTAGCCTTGCCGACTCCTTTGTTTGCCTTAAATAGATACATATTTG'],
                         loc('ling.py'): ['--rosalind',
        '--sample',
        '--ukkonen',
        '--actual',
        '--align'],
                         loc('lrep.py'): ['--rosalind',
        '--sample'],
                         loc('mend.py'): ['--rosalind',
        '--sample'],
                         loc('mgap.py'): ['--sample'],
                         loc('mmch.py'): ['--rosalind',
        '--sample3',
        '--sample2',
        '--sample',
        '-sample'],
                         loc('motz.py'): ['--sample',
        '--rosalind'],
                         loc('mrep.py'): ['--rosalind',
        '--sample',
        '--extra'],
                         loc('mult.py'): ['--sample'],
                         loc('nwc.py'): ['--rosalind',
        '--sample'],
                         loc('oap.py'): ['--sample',
        '--rosalind'],
                         loc('osym.py'): ['--sample'],
                         loc('pdpl.py'): ['--rosalind',
        '--sample'],
                         loc('phylogeny.py'): ['--sample'],
                         loc('pmch.py'): ['--rosalind',
        '--sample'],
                         loc('qrt.py'): ['--rosalind',
        '--sample'],
                         loc('qrtd.py'): ['--sample',
        '--rosalind',
        '--align'],
                         loc('revp.py'): ['--sample'],
                         loc('rna.py'): ['--sample'],
                         loc('rnas.py'): ['--sample',
        '--rosalind'],
                         loc('rsub.py'): ['--sample'],
                         loc('scc.py'): ['--sample',
        '--rosalind'],
                         loc('sdag.py'): ['--rosalind',
        '--sample'],
                         loc('sims.py'): ['--sample',
        '--rosalind'],
                         loc('smgb.py'): ['--sample',
        '--rosalind'],
                         loc('sptd.py'): ['--rosalind',
        '--sample',
        '--align'],
                         loc('subo.py'): ['--sample',
        '--rosalind'],
                         loc('suff.py'): ['--sample',
        '--rosalind'],
                         loc('template.py'): ['--sample'],
                         loc('tree.py'): ['--rosalind',
        '--sample'],
                         loc('trie.py'): ['--sample',
        '--rosalind']}
debug.show-args-dialog = {loc('../cluster/fcs_params.py'): False,
                          loc('ASMQ.py'): False,
                          loc('BA4M.py'): False,
                          loc('BA7A.py'): False,
                          loc('BA7B.py'): False,
                          loc('BA7C.py'): False,
                          loc('BA7D.py'): False,
                          loc('BA7E.py'): False,
                          loc('BA7G.py'): False,
                          loc('BA8B.py'): False,
                          loc('BA8E.py'): False,
                          loc('CORR.py'): False,
                          loc('DBRU.py'): False,
                          loc('GASM.py'): False,
                          loc('GREP.py'): False,
                          loc('KMP.py'): False,
                          loc('PCOV.py'): False,
                          loc('count-kmer-occurrences.py'): False,
                          loc('newick.py'): False,
                          loc('nwck.py'): False,
                          loc('rosalind.py'): False,
                          loc('unknown:<untitled> #118'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.2524199553239017,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(53,)],
                                 'top-node': (52,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('DBRU.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('DBRU.py'),
                      'a')]},
        loc('GREP.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('function def',
                                       loc('GREP.py'),
                                       'count_kmers')]},
        loc('PCOV.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('function def',
                                       loc('PCOV.py'),
                                       'pcov')]},
        loc('rosalind.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('function def',
        loc('rosalind.py'),
        'dbru')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'findEncodings',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'np.argmax',
                                       'fReverse': True,
                                       'fSearchText': 'argmax',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ["ord('a')\n",
        "ord('A')\n",
        "[ord[c]-ord['A'] for c in 'AABBAA']\n",
        "[ord(c)-ord('A') for c in 'AABBAA']\n"]},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('BA10A.py'),
        {'attrib-starts': [],
         'code-line': "    print (ProbabilityHiddenPath('AABBBAABABAAAABBBBAABBABABBBAABBAAAABABAABBABABBAB',\r\n",
         'first-line': 6,
         'folded-linenos': [],
         'sel-line': 24,
         'sel-line-start': 845,
         'selection_end': 931,
         'selection_start': 931,
         'zoom': 0},
        1677198387.9932077],
        [loc('hmm.py'),
         {'attrib-starts': [('ProbabilityHiddenPath|0|',
                             28)],
          'code-line': '    def logP_Transition(i):\r\n',
          'first-line': 22,
          'folded-linenos': [],
          'sel-line': 38,
          'sel-line-start': 1300,
          'selection_end': 1307,
          'selection_start': 1307,
          'zoom': 0},
         1677198391.1721692],
        [loc('BA10A.py'),
         {'attrib-starts': [],
          'code-line': "                                 'AB',\r\n",
          'first-line': 6,
          'folded-linenos': [],
          'sel-line': 30,
          'sel-line-start': 1149,
          'selection_end': 1187,
          'selection_start': 1187,
          'zoom': 0},
         1677198440.6619294],
        [loc('hmm.py'),
         {'attrib-starts': [('get_indices|0|',
                             22)],
          'code-line': '    for i in range(len(Alphabet)):\r\n',
          'first-line': 13,
          'folded-linenos': [],
          'sel-line': 24,
          'sel-line-start': 832,
          'selection_end': 863,
          'selection_start': 863,
          'zoom': 0},
         1677198475.1461298],
        [loc('BA10A.py'),
         {'attrib-starts': [],
          'code-line': "                                 'AB',\r\n",
          'first-line': 6,
          'folded-linenos': [],
          'sel-line': 30,
          'sel-line-start': 1149,
          'selection_end': 1187,
          'selection_start': 1187,
          'zoom': 0},
         1677198480.6130176],
        [loc('hmm.py'),
         {'attrib-starts': [('ProbabilityHiddenPath|0|',
                             28)],
          'code-line': '    logTransition = np.log(Transition)\r\n',
          'first-line': 24,
          'folded-linenos': [],
          'sel-line': 41,
          'sel-line-start': 1471,
          'selection_end': 1471,
          'selection_start': 1471,
          'zoom': 0},
         1677198499.806541],
        [loc('BA10A.py'),
         {'attrib-starts': [],
          'code-line': "                                 'AB',\r\n",
          'first-line': 20,
          'folded-linenos': [],
          'sel-line': 38,
          'sel-line-start': 1571,
          'selection_end': 1607,
          'selection_start': 1607,
          'zoom': 0},
         1677198546.336921],
        [loc('BA10B.py'),
         {'attrib-starts': [],
          'code-line': "    print (ProbabilityOutcomeGivenHiddenPath('xzyyxyzyxzyzxxzyzzxxzyxyxyxzxzyyzyzxzxzyxyzyyyzzxz', 'xyz',\r\n",
          'first-line': 18,
          'folded-linenos': [],
          'sel-line': 21,
          'sel-line-start': 828,
          'selection_end': 872,
          'selection_start': 839,
          'zoom': 0},
         1677198632.6863422],
        [loc('hmm.py'),
         {'attrib-starts': [('ProbabilityOutcomeGivenHiddenPath|0|',
                             48)],
          'code-line': '    path_indices  = get_indices(path,Alphabet=states)\r\n',
          'first-line': 41,
          'folded-linenos': [],
          'sel-line': 59,
          'sel-line-start': 2165,
          'selection_end': 2218,
          'selection_start': 2218,
          'zoom': 0},
         1677198813.525526],
        [loc('BA10A.py'),
         {'attrib-starts': [],
          'code-line': "                                 'AB',\r\n",
          'first-line': 20,
          'folded-linenos': [],
          'sel-line': 38,
          'sel-line-start': 1571,
          'selection_end': 1607,
          'selection_start': 1607,
          'zoom': 0},
         1677198815.58472],
        [loc('BA10B.py'),
         {'attrib-starts': [],
          'code-line': "    print (ProbabilityOutcomeGivenHiddenPath('xzyyxyzyxzyzxxzyzzxxzyxyxyxzxzyyzyzxzxzyxyzyyyzzxz', 'xyz',\r\n",
          'first-line': 18,
          'folded-linenos': [],
          'sel-line': 21,
          'sel-line-start': 828,
          'selection_end': 872,
          'selection_start': 839,
          'zoom': 0},
         1677198820.7980258],
        [loc('hmm.py'),
         {'attrib-starts': [('ProbabilityOutcomeGivenHiddenPath|0|',
                             48)],
          'code-line': '    logEmission = {a:np.log(b) for a,b in Emission.items()}\r\n',
          'first-line': 48,
          'folded-linenos': [],
          'sel-line': 61,
          'sel-line-start': 2222,
          'selection_end': 2222,
          'selection_start': 2222,
          'zoom': 0},
         1677198869.8286903],
        [loc('BA10B.py'),
         {'attrib-starts': [],
          'code-line': "    print (ProbabilityOutcomeGivenHiddenPath('xzyyxyzyxzyzxxzyzzxxzyxyxyxzxzyyzyzxzxzyxyzyyyzzxz', 'xyz',\r\n",
          'first-line': 18,
          'folded-linenos': [],
          'sel-line': 21,
          'sel-line-start': 828,
          'selection_end': 872,
          'selection_start': 839,
          'zoom': 0},
         1677198971.3689408],
        [loc('hmm.py'),
         {'attrib-starts': [('ProbabilityOutcomeGivenHiddenPath|0|',
                             48)],
          'code-line': '\r\n',
          'first-line': 43,
          'folded-linenos': [],
          'sel-line': 55,
          'sel-line-start': 1988,
          'selection_end': 1988,
          'selection_start': 1988,
          'zoom': 0},
         1677199033.7886555],
        [loc('BA10B.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 33,
          'sel-line-start': 1684,
          'selection_end': 1684,
          'selection_start': 1684,
          'zoom': 0},
         1677199265.6541057],
        [loc('BA10A.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 20,
          'sel-line-start': 762,
          'selection_end': 762,
          'selection_start': 762,
          'zoom': 0},
         1677199285.3868763],
        [loc('BA10B.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 33,
          'sel-line-start': 1684,
          'selection_end': 1684,
          'selection_start': 1684,
          'zoom': 0},
         1677199289.283489],
        [loc('BA10A.py'),
         {'attrib-starts': [],
          'code-line': '#!/usr/bin/env python\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 21,
          'selection_start': 0,
          'zoom': 0},
         1677199293.9266317],
        [loc('BA10B.py'),
         {'attrib-starts': [],
          'code-line': '   BA10B Compute the Probability of an Outcome Given a Hidden Path\r\n',
          'first-line': 6,
          'folded-linenos': [],
          'sel-line': 18,
          'sel-line-start': 708,
          'selection_end': 711,
          'selection_start': 711,
          'zoom': 0},
         1677199319.8208387],
        [loc('hmm.py'),
         {'attrib-starts': [('ProbabilityOutcomeGivenHiddenPath|0|',
                             48)],
          'code-line': '    logEmission = np.log(Emission)\r\n',
          'first-line': 43,
          'folded-linenos': [],
          'sel-line': 59,
          'sel-line-start': 2106,
          'selection_end': 2140,
          'selection_start': 2140,
          'zoom': 0},
         1677199395.136405]],
        20),
        'current-loc': loc('BA10B.py'),
        'editor-state-list': [(loc('BA10A.py'),
                               {'attrib-starts': [],
                                'code-line': '#!/usr/bin/env python\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 0,
                                'sel-line-start': 0,
                                'selection_end': 21,
                                'selection_start': 0,
                                'zoom': 0}),
                              (loc('BA10B.py'),
                               {'attrib-starts': [],
                                'code-line': '   BA10B Compute the Probability of an Outcome Given a Hidden Path\r\n',
                                'first-line': 6,
                                'folded-linenos': [],
                                'sel-line': 18,
                                'sel-line-start': 708,
                                'selection_end': 711,
                                'selection_start': 711,
                                'zoom': 0}),
                              (loc('hmm.py'),
                               {'attrib-starts': [('ProbabilityOutcomeGivenHiddenPath|0|',
        48)],
                                'code-line': '    logEmission = np.log(Emission)\r\n',
                                'first-line': 43,
                                'folded-linenos': [],
                                'sel-line': 59,
                                'sel-line-start': 2106,
                                'selection_end': 2140,
                                'selection_start': 2140,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('BA10A.py'),
         loc('BA10B.py'),
         loc('hmm.py')]),
                               'open_files': ['BA10A.py',
        'hmm.py',
        'BA10B.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1677199403.9954145),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1611451356.637),
                 'user_data': {}},
        'window-alloc': (28,
                         -1,
                         1360,
                         732)}]}
guimgr.recent-documents = [loc('BA10B.py'),
                           loc('hmm.py'),
                           loc('BA10A.py')]
guimgr.visual-state = {loc('../../../Anaconda3/lib/site-packages/Bio/File.py'): {'attrib-starts': [('as_handle',
        57)],
        'first-line': 93,
        'folded-linenos': [],
        'sel-line': 112,
        'sel-line-start': 3870,
        'selection_end': 3870,
        'selection_start': 3870,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/Bio/SubsMat/MatrixInfo.py'): {'attrib-starts': [],
        'first-line': 765,
        'folded-linenos': [],
        'sel-line': 932,
        'sel-line-start': 59505,
        'selection_end': 59513,
        'selection_start': 59505,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/numpy/core/fromnumeric.py'): {'attrib-starts': [('argmax',
        910)],
        'first-line': 948,
        'folded-linenos': [],
        'sel-line': 967,
        'sel-line-start': 31833,
        'selection_end': 31833,
        'selection_start': 31833,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/sre_parse.py'): {'attrib-starts': [('_parse',
        490)],
        'first-line': 762,
        'folded-linenos': [],
        'sel-line': 780,
        'sel-line-start': 29149,
        'selection_end': 29149,
        'selection_start': 29149,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/unittest/case.py'): {'attrib-starts': [('TestCase',
        340),
        ('TestCase._baseAssertEqual',
         816)],
        'first-line': 801,
        'folded-linenos': [],
        'sel-line': 821,
        'sel-line-start': 31048,
        'selection_end': 31048,
        'selection_start': 31048,
        'zoom': 0},
                       loc('../../../Program Files (x86)/Wing IDE Personal 6.0/resources/builtin-pi-files/3.5/builtins.pi'): {'attrib-starts': [('print',
        2749)],
        'first-line': 2735,
        'folded-linenos': [],
        'sel-line': 2749,
        'sel-line-start': 86688,
        'selection_end': 86697,
        'selection_start': 86692,
        'zoom': 0},
                       loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'): {'attrib-starts': [('iter|0|',
        1809)],
        'code-line': 'def iter(iterable):\n',
        'first-line': 1796,
        'folded-linenos': [],
        'sel-line': 1809,
        'sel-line-start': 54070,
        'selection_end': 54078,
        'selection_start': 54074,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/Bio/File.py'): {'attrib-starts': [('as_handle|0|',
        28)],
        'code-line': '        with open(handleish, mode, **kwargs) as fp:\n',
        'first-line': 51,
        'folded-linenos': [],
        'sel-line': 71,
        'sel-line-start': 2212,
        'selection_end': 2212,
        'selection_start': 2212,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/Bio/Phylo/_io.py'): {'attrib-starts': [('read|0|',
        51)],
        'code-line': 'def read(file, format, **kwargs):\n',
        'first-line': 26,
        'folded-linenos': [],
        'sel-line': 51,
        'sel-line-start': 1293,
        'selection_end': 1301,
        'selection_start': 1297,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/Bio/Seq.py'): {'attrib-starts': [('translate|0|',
        2371)],
        'code-line': '                raise ValueError("Bad table argument") from None\n',
        'first-line': 2460,
        'folded-linenos': [],
        'sel-line': 2480,
        'sel-line-start': 86460,
        'selection_end': 86460,
        'selection_start': 86460,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/_distributor_init.py'): {'attrib-starts': [],
        'code-line': '            for filename in glob.glob(os.path.join(libs_dir,\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 650,
        'selection_end': 650,
        'selection_start': 650,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tarjan/__init__.py'): {'attrib-starts': [('tarjan|0|',
        80)],
        'code-line': 'def tarjan(g):\n',
        'first-line': 92,
        'folded-linenos': [],
        'sel-line': 80,
        'sel-line-start': 3056,
        'selection_end': 3066,
        'selection_start': 3060,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/unittest/case.py'): {'attrib-starts': [('TestCase|0|',
        374),
        ('TestCase|0|._baseAssertEqual|0|',
         899)],
        'code-line': '            raise self.failureException(msg)\r\n',
        'first-line': 884,
        'folded-linenos': [],
        'sel-line': 904,
        'sel-line-start': 34714,
        'selection_end': 34714,
        'selection_start': 34714,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python38/lib/argparse.py'): {'attrib-starts': [('ArgumentParser|0|',
        1618),
        ('ArgumentParser|0|.parse_args|0|',
         1766)],
        'code-line': '        args, argv = self.parse_known_args(args, namespace)\r\n',
        'first-line': 1747,
        'folded-linenos': [],
        'sel-line': 1767,
        'sel-line-start': 65919,
        'selection_end': 65919,
        'selection_start': 65919,
        'zoom': 0},
                       loc('../AppData/Local/Temp/rosalind.py-rev749.svn000.tmp.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Wing Personal 7/pi-cache/3.8/C/Users/Simon/AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_multiarray_umath.pi'): {'attrib-starts': [('zeros|0|',
        11334)],
        'code-line': 'def zeros():\n',
        'first-line': 11321,
        'folded-linenos': [],
        'sel-line': 11334,
        'sel-line-start': 397112,
        'selection_end': 397121,
        'selection_start': 397116,
        'zoom': 0},
                       loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/indexing.py'): {'attrib-starts': [('_iLocIndexer|0|',
        1968),
        ('_iLocIndexer|0|._validate_integer|0|',
         2044)],
        'code-line': '            raise IndexError("single positional indexer is out-of-bounds")\r\n',
        'first-line': 2042,
        'folded-linenos': [],
        'sel-line': 2062,
        'sel-line-start': 73225,
        'selection_end': 73225,
        'selection_start': 73225,
        'zoom': 0},
                       loc('../cluster/fcs_params.py'): {'attrib-starts': [],
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../learn/motifs.py'): {'attrib-starts': [],
        'code-line': "    plt.savefig(os.path.basename(__file__).split('.')[0] )\r\n",
        'first-line': 179,
        'folded-linenos': [],
        'sel-line': 197,
        'sel-line-start': 7575,
        'selection_end': 7632,
        'selection_start': 7591,
        'zoom': 0},
                       loc('B10A.py'): {'attrib-starts': [('ba10A',
        17)],
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 787,
        'selection_end': 793,
        'selection_start': 793,
        'zoom': 0},
                       loc('BA10A.py'): {'attrib-starts': [],
        'code-line': "    print (ProbabilityHiddenPath('BBABBBABBAABABABBBAABBBBAAABABABAAAABBBBBAABBABABB',\r\n",
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 28,
        'sel-line-start': 1021,
        'selection_end': 1053,
        'selection_start': 1032,
        'zoom': 0},
                       loc('BA10B.py'): {'attrib-starts': [],
        'code-line': "                                                 ('A','x'): 0.419, ('A','y'):   0.321, ('A','z') : 0.26,\r\n",
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 1090,
        'selection_end': 1149,
        'selection_start': 1139,
        'zoom': 0},
                       loc('BA10C.py'): {'attrib-starts': [],
        'code-line': '    print ( Viterbi(xs,alphabet,States,Transition,Emission))\r\n',
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 890,
        'selection_end': 909,
        'selection_start': 902,
        'zoom': 0},
                       loc('BA10D.py'): {'attrib-starts': [],
        'code-line': '        Result = Likelihood(xs,alphabet,States,Transition,Emission)\r\n',
        'first-line': 29,
        'folded-linenos': [],
        'sel-line': 48,
        'sel-line-start': 2386,
        'selection_end': 2413,
        'selection_start': 2403,
        'zoom': 0},
                       loc('BA10E.py'): {'attrib-starts': [],
        'code-line': '    if args.extra:\r\n',
        'first-line': 58,
        'folded-linenos': [],
        'sel-line': 74,
        'sel-line-start': 3470,
        'selection_end': 3570,
        'selection_start': 3471,
        'zoom': 0},
                       loc('BA10F.py'): {'attrib-starts': [],
        'code-line': "        for row in formatEmission(Emission,States,['A',   'B',   'C',   'D',   'E'],precision=args.precision):\r\n",
        'first-line': 17,
        'folded-linenos': [],
        'sel-line': 40,
        'sel-line-start': 1932,
        'selection_end': 1951,
        'selection_start': 1951,
        'zoom': 0},
                       loc('BA10G.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA10G \tPerform a Multiple Sequence Alignment with a Profile HMM ')\r\n",
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 921,
        'selection_end': 1023,
        'selection_start': 1023,
        'zoom': 0},
                       loc('BA10H.py'): {'attrib-starts': [],
        'code-line': 'from   hmm     import float2str,EstimateParameters\r\n',
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 841,
        'selection_end': 891,
        'selection_start': 891,
        'zoom': 0},
                       loc('BA10I.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA10I \tImplement Viterbi Learning ')\r\n",
        'first-line': 13,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 891,
        'selection_end': 963,
        'selection_start': 963,
        'zoom': 0},
                       loc('BA10J.py'): {'attrib-starts': [],
        'code-line': "                              ('B','x'):   0.04, ('B','y'):    0.467, ('B','z'):   0.493   }):\r\n",
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 48,
        'sel-line-start': 2031,
        'selection_end': 2123,
        'selection_start': 2123,
        'zoom': 0},
                       loc('BA10K.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA10K \tImplement Baum-Welch Learning ')\r\n",
        'first-line': 20,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 894,
        'selection_end': 969,
        'selection_start': 969,
        'zoom': 0},
                       loc('BA11A.py'): {'attrib-starts': [],
        'code-line': '#    Copyright (C) 2019 Greenweaves Software Limited\r\n',
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('BA11D.py'): {'attrib-starts': [],
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 20,
        'sel-line-start': 837,
        'selection_end': 8351,
        'selection_start': 8351,
        'zoom': 0},
                       loc('BA11E.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA11E \tSequence a Peptide ')\r\n",
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 883,
        'selection_end': 947,
        'selection_start': 947,
        'zoom': 0},
                       loc('BA11F.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA11F \tFind a Highest-Scoring Peptide in a Proteome against a Spectrum ')\r\n",
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 928,
        'selection_end': 1037,
        'selection_start': 1037,
        'zoom': 0},
                       loc('BA11G.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA11G \tImplement PSMSearch ')\r\n",
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 884,
        'selection_end': 949,
        'selection_start': 949,
        'zoom': 0},
                       loc('BA11H.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA11H \tCompute the Size of a Spectral Dictionary ')\r\n",
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 906,
        'selection_end': 993,
        'selection_start': 993,
        'zoom': 0},
                       loc('BA11I.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA11I \tCompute the Probability of a Spectral Dictionary ')\r\n",
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 913,
        'selection_end': 1007,
        'selection_start': 1007,
        'zoom': 0},
                       loc('BA5A.py'): {'attrib-starts': [('number_of_coins',
        5)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 500,
        'selection_end': 524,
        'selection_start': 524,
        'zoom': 0},
                       loc('BA5I.py'): {'attrib-starts': [],
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 925,
        'selection_end': 967,
        'selection_start': 967,
        'zoom': 0},
                       loc('BA5J.py'): {'attrib-starts': [('ba5j',
        19)],
        'first-line': 7,
        'folded-linenos': [],
        'sel-line': 20,
        'sel-line-start': 827,
        'selection_end': 852,
        'selection_start': 845,
        'zoom': 0},
                       loc('BA5L.py'): {'attrib-starts': [('alignUsingLinearSpace|0|',
        33),
        ('alignUsingLinearSpace|0|.MiddleNodeAndEdge|0|',
         46)],
        'code-line': '        ((i1,j1),(i2,j2)) = FindMiddleEdge(v[top:bottom],w[left:right],replace_score=replace_score,indel_cost=indel_cost)\r\n',
        'first-line': 42,
        'folded-linenos': [],
        'sel-line': 47,
        'sel-line-start': 1639,
        'selection_end': 1639,
        'selection_start': 1639,
        'zoom': 0},
                       loc('BA5M.py'): {'attrib-starts': [],
        'code-line': "    s,u,v,w = FindHighestScoringMultipleSequenceAlignment('ATATCCG','TCCGA','ATGTACTG')\r\n",
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 930,
        'selection_end': 930,
        'selection_start': 930,
        'zoom': 0},
                       loc('BA6A.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('BA6A Implement GreedySorting to Sort a Permutation by Reversals')\r\n",
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 1147,
        'selection_end': 1248,
        'selection_start': 1248,
        'zoom': 0},
                       loc('BA6B.py'): {'attrib-starts': [],
        'code-line': "     parser = argparse.ArgumentParser('BA6B Compute the Number of Breakpoints in a Permutation ')\r\n",
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 985,
        'selection_end': 1080,
        'selection_start': 1080,
        'zoom': 0},
                       loc('BA6C.py'): {'attrib-starts': [],
        'code-line': '        print (d2break([[+1, +2, +3, +4, +5, +6]],\r\n',
        'first-line': 40,
        'folded-linenos': [],
        'sel-line': 48,
        'sel-line-start': 1803,
        'selection_end': 1825,
        'selection_start': 1818,
        'zoom': 0},
                       loc('BA6D.py'): {'attrib-starts': [],
        'code-line': '          Input  = read_strings(f\'data/rosalind_{os.path.basename(__file__).split(".")[0]}.txt\')\r\n',
        'first-line': 86,
        'folded-linenos': [],
        'sel-line': 96,
        'sel-line-start': 4107,
        'selection_end': 4203,
        'selection_start': 4116,
        'zoom': 0},
                       loc('BA6F.py'): {'attrib-starts': [],
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 725,
        'selection_end': 730,
        'selection_start': 727,
        'zoom': 0},
                       loc('BA6G.py'): {'attrib-starts': [],
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 822,
        'selection_end': 822,
        'selection_start': 822,
        'zoom': 0},
                       loc('BA6H.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 725,
        'selection_end': 754,
        'selection_start': 725,
        'zoom': 0},
                       loc('BA6J.py'): {'attrib-starts': [],
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('BA6K.py'): {'attrib-starts': [],
        'first-line': 17,
        'folded-linenos': [],
        'sel-line': 20,
        'sel-line-start': 813,
        'selection_end': 815,
        'selection_start': 813,
        'zoom': 0},
                       loc('BA7A.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2017-2021 Greenweaves Software Limited\r\n',
        'first-line': 26,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('BA7B.py'): {'attrib-starts': [],
        'code-line': '# but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 372,
        'selection_end': 378,
        'selection_start': 378,
        'zoom': 0},
                       loc('BA7C.py'): {'attrib-starts': [],
        'code-line': '    AdditivePhylogeny(D,n).print_adjacency()\r\n',
        'first-line': 85,
        'folded-linenos': [],
        'sel-line': 97,
        'sel-line-start': 3037,
        'selection_end': 3079,
        'selection_start': 3064,
        'zoom': 0},
                       loc('BA7D.py'): {'attrib-starts': [],
        'first-line': 44,
        'folded-linenos': [],
        'sel-line': 66,
        'sel-line-start': 2157,
        'selection_end': 2241,
        'selection_start': 2161,
        'zoom': 0},
                       loc('BA7E.py'): {'attrib-starts': [],
        'first-line': 69,
        'folded-linenos': [],
        'sel-line': 89,
        'sel-line-start': 2990,
        'selection_end': 3058,
        'selection_start': 3015,
        'zoom': 0},
                       loc('BA7F.py'): {'attrib-starts': [],
        'code-line': '        print_assignments(assignments)\r\n',
        'first-line': 43,
        'folded-linenos': [],
        'sel-line': 57,
        'sel-line-start': 2363,
        'selection_end': 2400,
        'selection_start': 2400,
        'zoom': 0},
                       loc('BA7G.py'): {'attrib-starts': [],
        'code-line': 'from phylogeny import SmallParsimony\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 811,
        'selection_end': 847,
        'selection_start': 847,
        'zoom': 0},
                       loc('BA8A.py'): {'attrib-starts': [],
        'code-line': '    m = -1\r\n',
        'first-line': 33,
        'folded-linenos': [],
        'sel-line': 37,
        'sel-line-start': 1322,
        'selection_end': 1727,
        'selection_start': 1322,
        'zoom': 0},
                       loc('BA8B.py'): {'attrib-starts': [],
        'first-line': 22,
        'folded-linenos': [],
        'sel-line': 33,
        'sel-line-start': 1069,
        'selection_end': 1413,
        'selection_start': 1072,
        'zoom': 0},
                       loc('BA8C.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 5,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 686,
        'selection_end': 686,
        'selection_start': 686,
        'zoom': 0},
                       loc('BA8D.py'): {'attrib-starts': [],
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 686,
        'selection_end': 686,
        'selection_start': 686,
        'zoom': 0},
                       loc('BA8E.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 728,
        'selection_start': 0,
        'zoom': 0},
                       loc('BA9A.py'): {'attrib-starts': [('convert_trie|0|',
        23)],
        'code-line': 'def convert_trie(Trie):\r\n',
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 888,
        'selection_end': 900,
        'selection_start': 888,
        'zoom': 0},
                       loc('BA9B.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2019-2020 Greenweaves Software Limited\r\n',
        'first-line': 19,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('BA9C.py'): {'attrib-starts': [],
        'code-line': 'from snp import SuffixTree   \r\n',
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 820,
        'selection_end': 846,
        'selection_start': 836,
        'zoom': 0},
                       loc('BA9D.py'): {'attrib-starts': [],
        'code-line': "        print (FindLongestRepeat('ATATCGTTTTATCGTT'))\r\n",
        'first-line': 20,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1417,
        'selection_end': 1449,
        'selection_start': 1432,
        'zoom': 0},
                       loc('BA9E.py'): {'attrib-starts': [],
        'code-line': "        print (LongestSharedSubstring('panama',\r\n",
        'first-line': 10,
        'folded-linenos': [],
        'sel-line': 33,
        'sel-line-start': 1431,
        'selection_end': 1468,
        'selection_start': 1446,
        'zoom': 0},
                       loc('BA9F.py'): {'attrib-starts': [('FindShortestNonShared|0|',
        23)],
        'code-line': '    #r,p,l = SuffixArray(text,auxiliary=True,padLCP=True)\r\n',
        'first-line': 17,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1349,
        'selection_end': 1388,
        'selection_start': 1388,
        'zoom': 0},
                       loc('BA9G.py'): {'attrib-starts': [],
        'code-line': 'from   snp import SuffixArray\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 843,
        'selection_end': 872,
        'selection_start': 843,
        'zoom': 0},
                       loc('BA9H.py'): {'attrib-starts': [],
        'code-line': "        print (MatchPatternsUsingSuffixArray('AATCGGGTTCAATCGGGGT',['ATCG','GGGT']))\r\n",
        'first-line': 17,
        'folded-linenos': [],
        'sel-line': 30,
        'sel-line-start': 1333,
        'selection_end': 1377,
        'selection_start': 1348,
        'zoom': 0},
                       loc('BA9I.py'): {'attrib-starts': [],
        'code-line': "    print (BurrowsWheeler('GCGTGCCTGGTCA$'))\r\n",
        'first-line': 7,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 839,
        'selection_end': 864,
        'selection_start': 850,
        'zoom': 0},
                       loc('BA9J.py'): {'attrib-starts': [],
        'code-line': '        Actual = InverseBWT(Input[0])\r\n',
        'first-line': 22,
        'folded-linenos': [],
        'sel-line': 35,
        'sel-line-start': 1549,
        'selection_end': 1576,
        'selection_start': 1566,
        'zoom': 0},
                       loc('BA9K.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2020 Greenweaves Software Limited\r\n',
        'first-line': 32,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('BA9L.py'): {'attrib-starts': [],
        'code-line': "    parser.add_argument('--extra',    default=False, action='store_true', help='process extra dataset')\r\n",
        'first-line': 19,
        'folded-linenos': [],
        'sel-line': 28,
        'sel-line-start': 1090,
        'selection_end': 1193,
        'selection_start': 1094,
        'zoom': 0},
                       loc('BA9M.py'): {'attrib-starts': [],
        'code-line': '            \r\n',
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 42,
        'sel-line-start': 1857,
        'selection_end': 1869,
        'selection_start': 1869,
        'zoom': 0},
                       loc('BA9N.py'): {'attrib-starts': [],
        'code-line': '# BA9N \tFind All Occurrences of a Collection of Patterns in a String \r\n',
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 716,
        'selection_end': 785,
        'selection_start': 716,
        'zoom': 0},
                       loc('BA9O.py'): {'attrib-starts': [],
        'code-line': "        Input,Expected  = read_strings('data/MultipleApproximatePatternMatching.txt',init=0)\r\n",
        'first-line': 31,
        'folded-linenos': [],
        'sel-line': 44,
        'sel-line-start': 1905,
        'selection_end': 1984,
        'selection_start': 1984,
        'zoom': 0},
                       loc('BA9P.py'): {'attrib-starts': [],
        'code-line': '        Coloured = ColourTree({\r\n',
        'first-line': 33,
        'folded-linenos': [],
        'sel-line': 46,
        'sel-line-start': 1793,
        'selection_end': 1822,
        'selection_start': 1812,
        'zoom': 0},
                       loc('BA9Q.py'): {'attrib-starts': [],
        'code-line': '            print (a,b)        \r\n',
        'first-line': 25,
        'folded-linenos': [],
        'sel-line': 37,
        'sel-line-start': 1673,
        'selection_end': 1703,
        'selection_start': 1703,
        'zoom': 0},
                       loc('BA9R.py'): {'attrib-starts': [],
        'code-line': "                f.write(f'{edge}\\n')\r\n",
        'first-line': 28,
        'folded-linenos': [],
        'sel-line': 288,
        'sel-line-start': 11909,
        'selection_end': 11945,
        'selection_start': 11925,
        'zoom': 0},
                       loc('BINS.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 49,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 879,
        'selection_end': 879,
        'selection_start': 879,
        'zoom': 0},
                       loc('CORR.py'): {'attrib-starts': [],
        'first-line': 84,
        'folded-linenos': [],
        'sel-line': 97,
        'sel-line-start': 3310,
        'selection_end': 3310,
        'selection_start': 3310,
        'zoom': 0},
                       loc('DBRU.py'): {'attrib-starts': [],
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 862,
        'selection_end': 875,
        'selection_start': 871,
        'zoom': 0},
                       loc('DDEG.py'): {'attrib-starts': [],
        'first-line': 19,
        'folded-linenos': [],
        'sel-line': 39,
        'sel-line-start': 1160,
        'selection_end': 1160,
        'selection_start': 1160,
        'zoom': 0},
                       loc('DEG.py'): {'attrib-starts': [],
                                       'code-line': 'from graphs import deg\r\n',
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 15,
                                       'sel-line-start': 688,
                                       'selection_end': 710,
                                       'selection_start': 710,
                                       'zoom': 0},
                       loc('FRMT.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 686,
        'selection_end': 686,
        'selection_start': 686,
        'zoom': 0},
                       loc('GASM.py'): {'attrib-starts': [],
        'first-line': 30,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 719,
        'selection_end': 722,
        'selection_start': 722,
        'zoom': 0},
                       loc('GBK.py'): {'attrib-starts': [],
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 13,
                                       'sel-line-start': 617,
                                       'selection_end': 684,
                                       'selection_start': 684,
                                       'zoom': 0},
                       loc('GLOB.py'): {'attrib-starts': [],
        'first-line': 10,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 955,
        'selection_end': 971,
        'selection_start': 971,
        'zoom': 0},
                       loc('GREP.py'): {'attrib-starts': [],
        'first-line': 98,
        'folded-linenos': [],
        'sel-line': 115,
        'sel-line-start': 3644,
        'selection_end': 3652,
        'selection_start': 3652,
        'zoom': 0},
                       loc('INS.py'): {'attrib-starts': [],
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 14,
                                       'sel-line-start': 686,
                                       'selection_end': 686,
                                       'selection_start': 686,
                                       'zoom': 0},
                       loc('INV.py'): {'attrib-starts': [('inv',
        29),
        ('inv.merge',
         33)],
                                       'first-line': 3,
                                       'folded-linenos': [],
                                       'sel-line': 50,
                                       'sel-line-start': 1539,
                                       'selection_end': 1599,
                                       'selection_start': 1599,
                                       'zoom': 0},
                       loc('KMP.py'): {'attrib-starts': [],
                                       'first-line': 45,
                                       'folded-linenos': [],
                                       'sel-line': 52,
                                       'sel-line-start': 1940,
                                       'selection_end': 1999,
                                       'selection_start': 1954,
                                       'zoom': 0},
                       loc('LONG.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 686,
        'selection_end': 686,
        'selection_start': 686,
        'zoom': 0},
                       loc('MED.py'): {'attrib-starts': [],
                                       'first-line': 26,
                                       'folded-linenos': [],
                                       'sel-line': 14,
                                       'sel-line-start': 686,
                                       'selection_end': 686,
                                       'selection_start': 686,
                                       'zoom': 0},
                       loc('MER.py'): {'attrib-starts': [],
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 14,
                                       'sel-line-start': 686,
                                       'selection_end': 686,
                                       'selection_start': 686,
                                       'zoom': 0},
                       loc('MPRT.py'): {'attrib-starts': [],
        'code-line': '#    Copyright (C) 2020 Simon Crase\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 703,
        'selection_start': 0,
        'zoom': 0},
                       loc('MS.py'): {'attrib-starts': [],
                                      'first-line': 0,
                                      'folded-linenos': [],
                                      'sel-line': 14,
                                      'sel-line-start': 686,
                                      'selection_end': 686,
                                      'selection_start': 686,
                                      'zoom': 0},
                       loc('PAR.py'): {'attrib-starts': [('par',
        15)],
                                       'first-line': 18,
                                       'folded-linenos': [],
                                       'sel-line': 24,
                                       'sel-line-start': 882,
                                       'selection_end': 882,
                                       'selection_start': 882,
                                       'zoom': 0},
                       loc('PAR3.py'): {'attrib-starts': [('par3',
        14)],
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 940,
        'selection_end': 940,
        'selection_start': 940,
        'zoom': 0},
                       loc('PCOV.py'): {'attrib-starts': [],
        'first-line': 26,
        'folded-linenos': [],
        'sel-line': 43,
        'sel-line-start': 1376,
        'selection_end': 1451,
        'selection_start': 1404,
        'zoom': 0},
                       loc('PTRA.py'): {'attrib-starts': [],
        'code-line': '                translated=translate(coding_dna,table=table,to_stop=True)\r\n',
        'first-line': 10,
        'folded-linenos': [],
        'sel-line': 28,
        'sel-line-start': 1053,
        'selection_end': 1078,
        'selection_start': 1069,
        'zoom': 0},
                       loc('QS.py'): {'attrib-starts': [],
                                      'first-line': 27,
                                      'folded-linenos': [],
                                      'sel-line': 14,
                                      'sel-line-start': 686,
                                      'selection_end': 686,
                                      'selection_start': 686,
                                      'zoom': 0},
                       loc('alignment.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 110,
        'selection_end': 157,
        'selection_start': 126,
        'zoom': 0},
                       loc('bf.py'): {'attrib-starts': [],
                                      'code-line': "    parser = argparse.ArgumentParser('BF Bellman-Ford Algorithm')\r\n",
                                      'first-line': 15,
                                      'folded-linenos': [],
                                      'sel-line': 33,
                                      'sel-line-start': 1221,
                                      'selection_end': 1284,
                                      'selection_start': 1284,
                                      'zoom': 0},
                       loc('bfs.py'): {'attrib-starts': [],
                                       'code-line': 'from   graphs  import ShortestDistances\r\n',
                                       'first-line': 19,
                                       'folded-linenos': [],
                                       'sel-line': 21,
                                       'sel-line-start': 844,
                                       'selection_end': 883,
                                       'selection_start': 866,
                                       'zoom': 0},
                       loc('bip.py'): {'attrib-starts': [],
                                       'code-line': "    with open(r'C:\\Users\\Simon\\Downloads\\rosalind_bip(3).txt') as f:\r\n",
                                       'first-line': 6,
                                       'folded-linenos': [],
                                       'sel-line': 23,
                                       'sel-line-start': 861,
                                       'selection_end': 996,
                                       'selection_start': 861,
                                       'zoom': 0},
                       loc('cc.py'): {'attrib-starts': [],
                                      'first-line': 8,
                                      'folded-linenos': [],
                                      'sel-line': 18,
                                      'sel-line-start': 781,
                                      'selection_end': 781,
                                      'selection_start': 781,
                                      'zoom': 0},
                       loc('chbp.py'): {'attrib-starts': [],
        'code-line': '          character_table = [expand(row) for row in Input[1:]]\r\n',
        'first-line': 31,
        'folded-linenos': [],
        'sel-line': 50,
        'sel-line-start': 2066,
        'selection_end': 2128,
        'selection_start': 2076,
        'zoom': 0},
                       loc('cntq.py'): {'attrib-starts': [('q|0|',
        45)],
        'code-line': 'def q(n):\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 45,
        'sel-line-start': 1791,
        'selection_end': 1796,
        'selection_start': 1795,
        'zoom': 0},
                       loc('combinatorics.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 65,
        'sel-line-start': 1874,
        'selection_end': 1874,
        'selection_start': 1874,
        'zoom': 0},
                       loc('conv.py'): {'attrib-starts': [],
        'first-line': 13,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 860,
        'selection_end': 872,
        'selection_start': 868,
        'zoom': 0},
                       loc('count-kmer-occurrences.py'): {'attrib-starts': [('reverse_complement',
        48)],
        'first-line': 126,
        'folded-linenos': [],
        'sel-line': 49,
        'sel-line-start': 1402,
        'selection_end': 1406,
        'selection_start': 1406,
        'zoom': 0},
                       loc('count-kmers.py'): {'attrib-starts': [],
        'first-line': 126,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 372,
        'selection_end': 436,
        'selection_start': 436,
        'zoom': 0},
                       loc('count_kmers.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('cset.py'): {'attrib-starts': [],
        'code-line': '            for row in cset(character_table):\r\n',
        'first-line': 33,
        'folded-linenos': [],
        'sel-line': 41,
        'sel-line-start': 1768,
        'selection_end': 1795,
        'selection_start': 1791,
        'zoom': 0},
                       loc('cstr.py'): {'attrib-starts': [],
        'code-line': 'from phylogeny import cstr\r\n',
        'first-line': 13,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 816,
        'selection_end': 842,
        'selection_start': 838,
        'zoom': 0},
                       loc('cstr1.py'): {'attrib-starts': [],
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 939,
        'selection_end': 947,
        'selection_start': 947,
        'zoom': 0},
                       loc('ctbl.py'): {'attrib-starts': [],
        'code-line': '        Result = CharacterTable(tree)\r\n',
        'first-line': 22,
        'folded-linenos': [],
        'sel-line': 43,
        'sel-line-start': 1693,
        'selection_end': 1724,
        'selection_start': 1710,
        'zoom': 0},
                       loc('ctbl.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 37,
        'selection_end': 37,
        'selection_start': 37,
        'zoom': 0},
                       loc('cte.py'): {'attrib-starts': [],
                                       'code-line': 'from graphs import cte\r\n',
                                       'first-line': 3,
                                       'folded-linenos': [],
                                       'sel-line': 15,
                                       'sel-line-start': 724,
                                       'selection_end': 735,
                                       'selection_start': 735,
                                       'zoom': 0},
                       loc('ctea.py'): {'attrib-starts': [],
        'code-line': "                                                         'fasta')]        \r\n",
        'first-line': 19,
        'folded-linenos': [],
        'sel-line': 35,
        'sel-line-start': 1488,
        'selection_end': 1511,
        'selection_start': 1511,
        'zoom': 0},
                       loc('dag.py'): {'attrib-starts': [],
                                       'first-line': 8,
                                       'folded-linenos': [],
                                       'sel-line': 22,
                                       'sel-line-start': 859,
                                       'selection_end': 912,
                                       'selection_start': 912,
                                       'zoom': 0},
                       loc('dij.py'): {'attrib-starts': [],
                                       'code-line': '       ',
                                       'first-line': 7,
                                       'folded-linenos': [],
                                       'sel-line': 53,
                                       'sel-line-start': 2153,
                                       'selection_end': 2160,
                                       'selection_start': 2160,
                                       'zoom': 0},
                       loc('dna.py'): {'attrib-starts': [],
                                       'code-line': "        Result = ' '.join(str(i) for i in count_nucleotides(Input[0]))\r\n",
                                       'first-line': 24,
                                       'folded-linenos': [],
                                       'sel-line': 35,
                                       'sel-line-start': 1505,
                                       'selection_end': 1564,
                                       'selection_start': 1547,
                                       'zoom': 0},
                       loc('edit.py'): {'attrib-starts': [],
        'code-line': 'from align import edit\r\n',
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 786,
        'selection_end': 808,
        'selection_start': 786,
        'zoom': 0},
                       loc('edta.py'): {'attrib-starts': [],
        'code-line': "        d,s,t=edta('PRETTY' ,'PRTTEIN')\r\n",
        'first-line': 13,
        'folded-linenos': [],
        'sel-line': 33,
        'sel-line-start': 1332,
        'selection_end': 1350,
        'selection_start': 1346,
        'zoom': 0},
                       loc('eubt.py'): {'attrib-starts': [],
        'code-line': '            for tree in UnrootedBinaryTree.Enumerate(Input[0].split()):\r\n',
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 36,
        'sel-line-start': 1580,
        'selection_end': 1632,
        'selection_start': 1623,
        'zoom': 0},
                       loc('fasta.py'): {'attrib-starts': [('FastaContent|0|',
        21),
        ('FastaContent|0|.__init__|0|',
         23)],
        'code-line': '            self.pairs.append((nn,text))\r\n',
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 38,
        'sel-line-start': 1572,
        'selection_end': 1572,
        'selection_start': 1572,
        'zoom': 0},
                       loc('fibo.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 18,
        'folded-linenos': [],
        'sel-line': 20,
        'sel-line-start': 783,
        'selection_end': 783,
        'selection_start': 783,
        'zoom': 0},
                       loc('file:d:/root/projects/Genera Biosystems/Development/source/scripts/extract-fcs-file-details.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('file:d:/root/projects/Genera Biosystems/Development/source/scripts/extract-fcs-params.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('foo.py'): {'attrib-starts': [('fitness_align',
        11)],
                                       'first-line': 53,
                                       'folded-linenos': [],
                                       'sel-line': 25,
                                       'sel-line-start': 630,
                                       'selection_end': 649,
                                       'selection_start': 642,
                                       'zoom': 0},
                       loc('fragile.py'): {'attrib-starts': [('d2break|0|',
        94)],
        'code-line': '    Cb= ColouredEdges(b)\r\n',
        'first-line': 138,
        'folded-linenos': [],
        'sel-line': 157,
        'sel-line-start': 4765,
        'selection_end': 4786,
        'selection_start': 4773,
        'zoom': 0},
                       loc('full.py'): {'attrib-starts': [],
        'first-line': 148,
        'folded-linenos': [],
        'sel-line': 184,
        'sel-line-start': 4934,
        'selection_end': 4956,
        'selection_start': 4956,
        'zoom': 0},
                       loc('gaff.py'): {'attrib-starts': [],
        'code-line': '#    along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n',
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 655,
        'selection_end': 683,
        'selection_start': 683,
        'zoom': 0},
                       loc('gcon.py'): {'attrib-starts': [],
        'code-line': 'from align import san_kai\r\n',
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 821,
        'selection_end': 846,
        'selection_start': 846,
        'zoom': 0},
                       loc('hdag.py'): {'attrib-starts': [],
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 762,
        'selection_end': 762,
        'selection_start': 762,
        'zoom': 0},
                       loc('hea.py'): {'attrib-starts': [('heapsort',
        65)],
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 66,
                                       'sel-line-start': 1715,
                                       'selection_end': 1727,
                                       'selection_start': 1727,
                                       'zoom': 0},
                       loc('helpers-old.py'): {'attrib-starts': [],
        'first-line': 19,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('helpers.py'): {'attrib-starts': [('expand|0|',
        753)],
        'code-line': '    return [int(c) for c in s]',
        'first-line': 734,
        'folded-linenos': [],
        'sel-line': 754,
        'sel-line-start': 22572,
        'selection_end': 22572,
        'selection_start': 22572,
        'zoom': 0},
                       loc('hiddenmarkov.py'): {'attrib-starts': [('ProbabilityOutcomeGivenHiddenPath',
        27)],
        'first-line': 13,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 1206,
        'selection_end': 1224,
        'selection_start': 1224,
        'zoom': 0},
                       loc('hmm.py'): {'attrib-starts': [],
                                       'code-line': '\r\n',
                                       'first-line': 349,
                                       'folded-linenos': [],
                                       'sel-line': 360,
                                       'sel-line-start': 12972,
                                       'selection_end': 12972,
                                       'selection_start': 12972,
                                       'zoom': 0},
                       loc('in.txt'): {'attrib-starts': [],
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 1,
                                       'sel-line-start': 858,
                                       'selection_end': 949,
                                       'selection_start': 949,
                                       'zoom': 0},
                       loc('itwv.py'): {'attrib-starts': [],
        'code-line': 'from   align   import itwv\r\n',
        'first-line': 25,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 856,
        'selection_end': 882,
        'selection_start': 878,
        'zoom': 0},
                       loc('ksim.py'): {'attrib-starts': [('ksim|0|',
        40)],
        'code-line': '   x=0\r\n',
        'first-line': 30,
        'folded-linenos': [],
        'sel-line': 42,
        'sel-line-start': 1649,
        'selection_end': 1649,
        'selection_start': 1649,
        'zoom': 0},
                       loc('laff-pypl.py'): {'attrib-starts': [],
        'code-line': '#   Copyright (C) 2020-2021 Greenweaves Software Limited\r\n',
        'first-line': 166,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 7642,
        'selection_start': 0,
        'zoom': 0},
                       loc('laff.py'): {'attrib-starts': [('read_fasta|0|',
        146)],
        'code-line': "            if text[0]=='>':\r\n",
        'first-line': 144,
        'folded-linenos': [],
        'sel-line': 152,
        'sel-line-start': 6241,
        'selection_end': 6269,
        'selection_start': 6269,
        'zoom': 0},
                       loc('lalign.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lcsq.py'): {'attrib-starts': [('lcsq',
        20),
        ('lcsq.dynamic_programming',
         21),
        ('lcsq.dynamic_programming.extract',
         30)],
        'first-line': 63,
        'folded-linenos': [],
        'sel-line': 35,
        'sel-line-start': 1462,
        'selection_end': 1519,
        'selection_start': 1519,
        'zoom': 0},
                       loc('ling.py'): {'attrib-starts': [],
        'code-line': 'from   ukkonen import build,Node\r\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 859,
        'selection_end': 873,
        'selection_start': 866,
        'zoom': 0},
                       loc('loca.py'): {'attrib-starts': [],
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 1056,
        'selection_end': 1079,
        'selection_start': 1079,
        'zoom': 0},
                       loc('lrep.py'): {'attrib-starts': [('lrep|0|',
        23)],
        'code-line': '                while m<  len(strings) and strings[indices[m]]==candidate:\r\n',
        'first-line': 40,
        'folded-linenos': [],
        'sel-line': 83,
        'sel-line-start': 2944,
        'selection_end': 2969,
        'selection_start': 2969,
        'zoom': 0},
                       loc('maj.py'): {'attrib-starts': [],
                                       'first-line': 28,
                                       'folded-linenos': [],
                                       'sel-line': 36,
                                       'sel-line-start': 1133,
                                       'selection_end': 1154,
                                       'selection_start': 1154,
                                       'zoom': 0},
                       loc('mend.py'): {'attrib-starts': [],
        'code-line': '        tree,_ = newick_parser.parse(Input[0])\r\n',
        'first-line': 22,
        'folded-linenos': [],
        'sel-line': 38,
        'sel-line-start': 1581,
        'selection_end': 1604,
        'selection_start': 1598,
        'zoom': 0},
                       loc('mgap.py'): {'attrib-starts': [],
        'code-line': "            f.write(f'{Result}\\n')\r\n",
        'first-line': 78,
        'folded-linenos': [],
        'sel-line': 99,
        'sel-line-start': 3943,
        'selection_end': 3972,
        'selection_start': 3972,
        'zoom': 0},
                       loc('mrep.py'): {'attrib-starts': [],
        'code-line': 'from   snp     import SuffixArray,mrep\r\n',
        'first-line': 27,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 832,
        'selection_end': 842,
        'selection_start': 839,
        'zoom': 0},
                       loc('newick.py'): {'attrib-starts': [('newick_to_adjacency_list|0|',
        172)],
        'code-line': 'def newick_to_adjacency_list(T,return_root=False):\r\n',
        'first-line': 10,
        'folded-linenos': [],
        'sel-line': 172,
        'sel-line-start': 5895,
        'selection_end': 5923,
        'selection_start': 5899,
        'zoom': 0},
                       loc('nwc.py'): {'attrib-starts': [],
                                       'code-line': "    parser = argparse.ArgumentParser('NWC Negative Weight Cycle')\r\n",
                                       'first-line': 5,
                                       'folded-linenos': [],
                                       'sel-line': 49,
                                       'sel-line-start': 1749,
                                       'selection_end': 1812,
                                       'selection_start': 1812,
                                       'zoom': 0},
                       loc('nwck.py'): {'attrib-starts': [('get_path|0|',
        30)],
        'code-line': 'def get_path(clade):\r\n',
        'first-line': 41,
        'folded-linenos': [],
        'sel-line': 30,
        'sel-line-start': 1058,
        'selection_end': 1070,
        'selection_start': 1062,
        'zoom': 0},
                       loc('oap.py'): {'attrib-starts': [],
                                       'code-line': '        Data      = read_fasta(f\'data/rosalind_{os.path.basename(__file__).split(".")[0]}.txt\')          \r\n',
                                       'first-line': 78,
                                       'folded-linenos': [],
                                       'sel-line': 97,
                                       'sel-line-start': 3683,
                                       'selection_end': 3778,
                                       'selection_start': 3691,
                                       'zoom': 0},
                       loc('orfr.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 194,
        'selection_end': 224,
        'selection_start': 224,
        'zoom': 0},
                       loc('osym.py'): {'attrib-starts': [('osym|0|',
        35),
        ('osym|0|.get_score|0|',
         36)],
        'code-line': '  def get_score(a,b, match=1,mismatch=-1):\r\n',
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 36,
        'sel-line-start': 1565,
        'selection_end': 1736,
        'selection_start': 1565,
        'zoom': 0},
                       loc('pdpl.py'): {'attrib-starts': [],
        'code-line': "    print (f'Elapsed Time {minutes} m {seconds:.2f} s')    \r\n",
        'first-line': 76,
        'folded-linenos': [],
        'sel-line': 99,
        'sel-line-start': 3668,
        'selection_end': 3677,
        'selection_start': 3672,
        'zoom': 0},
                       loc('phylogeny.py'): {'attrib-starts': [],
        'code-line': 'from   numpy    import argmin,argmax\r\n',
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 918,
        'selection_end': 945,
        'selection_start': 941,
        'zoom': 0},
                       loc('prsm.py'): {'attrib-starts': [],
        'code-line': '    print (m)\r\n',
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 39,
        'sel-line-start': 1149,
        'selection_end': 1158,
        'selection_start': 1153,
        'zoom': 0},
                       loc('ps.py'): {'attrib-starts': [('ps',
        20)],
                                      'first-line': 10,
                                      'folded-linenos': [],
                                      'sel-line': 27,
                                      'sel-line-start': 949,
                                      'selection_end': 979,
                                      'selection_start': 979,
                                      'zoom': 0},
                       loc('qrt.py'): {'attrib-starts': [],
                                       'code-line': '# Copyright (C) 2020 Greenweaves Software Limited\r\n',
                                       'first-line': 16,
                                       'folded-linenos': [],
                                       'sel-line': 0,
                                       'sel-line-start': 0,
                                       'selection_end': 0,
                                       'selection_start': 0,
                                       'zoom': 0},
                       loc('qrtd.py'): {'attrib-starts': [('qrtd|0|',
        100)],
        'code-line': '    #return len(quartets1) + len(quartets2) - 2*get_matches(quartets1,quartets2)\r\n',
        'first-line': 102,
        'folded-linenos': [],
        'sel-line': 122,
        'sel-line-start': 3885,
        'selection_end': 3886,
        'selection_start': 3886,
        'zoom': 0},
                       loc('rear.py'): {'attrib-starts': [],
        'code-line': '                d,_ = sort(original,parse(line))\r\n',
        'first-line': 5,
        'folded-linenos': [],
        'sel-line': 53,
        'sel-line-start': 1662,
        'selection_end': 1703,
        'selection_start': 1698,
        'zoom': 0},
                       loc('reference_tables.py'): {'attrib-starts': [],
        'code-line': '#\r\n',
        'first-line': 133,
        'folded-linenos': [],
        'sel-line': 139,
        'sel-line-start': 5288,
        'selection_end': 5289,
        'selection_start': 5289,
        'zoom': 0},
                       loc('reformat.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 240,
        'selection_end': 272,
        'selection_start': 272,
        'zoom': 0},
                       loc('revp.py'): {'attrib-starts': [],
        'code-line': "        for a,b in revp(FastaContent(['>Rosalind_24','TCAATGCATGCGGGTCTATATGCAT'])):\r\n",
        'first-line': 13,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 1292,
        'selection_end': 1315,
        'selection_start': 1311,
        'zoom': 0},
                       loc('rosalind-old.py'): {'attrib-starts': [('TestRosalind',
        2523),
        ('TestRosalind.test_ba5n',
         3462)],
        'first-line': 3456,
        'folded-linenos': [],
        'sel-line': 3464,
        'sel-line-start': 136759,
        'selection_end': 136804,
        'selection_start': 136788,
        'zoom': 0},
                       loc('rosalind_old.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 63,
        'sel-line-start': 1898,
        'selection_end': 1898,
        'selection_start': 1898,
        'zoom': 0},
                       loc('rsub.py'): {'attrib-starts': [],
        'code-line': "        for reverse in rsub('(((ostrich,cat)rat,mouse)dog,elephant)robot;',\r\n",
        'first-line': 76,
        'folded-linenos': [],
        'sel-line': 39,
        'sel-line-start': 1587,
        'selection_end': 1614,
        'selection_start': 1610,
        'zoom': 0},
                       loc('sc.py'): {'attrib-starts': [],
                                      'first-line': 27,
                                      'folded-linenos': [],
                                      'sel-line': 34,
                                      'sel-line-start': 1025,
                                      'selection_end': 1038,
                                      'selection_start': 1038,
                                      'zoom': 0},
                       loc('scc.py'): {'attrib-starts': [],
                                       'code-line': "    parser = argparse.ArgumentParser('SCC Strongly Connected Component')\r\n",
                                       'first-line': 13,
                                       'folded-linenos': [],
                                       'sel-line': 26,
                                       'sel-line-start': 930,
                                       'selection_end': 1000,
                                       'selection_start': 1000,
                                       'zoom': 0},
                       loc('sdag.py'): {'attrib-starts': [],
        'code-line': "    parser = argparse.ArgumentParser('SDAG Shortest Paths in DAG')\r\n",
        'first-line': 38,
        'folded-linenos': [],
        'sel-line': 47,
        'sel-line-start': 1386,
        'selection_end': 1450,
        'selection_start': 1450,
        'zoom': 0},
                       loc('sgra.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 20,
        'sel-line-start': 836,
        'selection_end': 851,
        'selection_start': 847,
        'zoom': 0},
                       loc('sims.py'): {'attrib-starts': [],
        'code-line': 'from   align import sims\r\n',
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 818,
        'selection_end': 842,
        'selection_start': 838,
        'zoom': 0},
                       loc('smgb.py'): {'attrib-starts': [],
        'code-line': 'from   fasta import FastaContent\r\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 853,
        'selection_end': 885,
        'selection_start': 853,
        'zoom': 0},
                       loc('snp.py'): {'attrib-starts': [('PartialSuffixArray|0|',
        610)],
                                       'code-line': 'def PartialSuffixArray(String,K) :\r\n',
                                       'first-line': 597,
                                       'folded-linenos': [],
                                       'sel-line': 610,
                                       'sel-line-start': 21929,
                                       'selection_end': 21951,
                                       'selection_start': 21933,
                                       'zoom': 0},
                       loc('sort.py'): {'attrib-starts': [],
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 758,
        'selection_end': 758,
        'selection_start': 758,
        'zoom': 0},
                       loc('spectrum.py'): {'attrib-starts': [('get_abbrev|0|',
        204)],
        'code-line': '    m1    = masses[index]\r\n',
        'first-line': 114,
        'folded-linenos': [],
        'sel-line': 206,
        'sel-line-start': 7257,
        'selection_end': 7257,
        'selection_start': 7257,
        'zoom': 0},
                       loc('sptb.py'): {'attrib-starts': [],
        'code-line': '    elapsed = time.time()-start\r\n',
        'first-line': 28,
        'folded-linenos': [],
        'sel-line': 47,
        'sel-line-start': 1776,
        'selection_end': 1807,
        'selection_start': 1807,
        'zoom': 0},
                       loc('sptd.py'): {'attrib-starts': [],
        'code-line': '        Result = sptd(Input[0].split(), Input[1], Input[2])\r\n',
        'first-line': 28,
        'folded-linenos': [],
        'sel-line': 40,
        'sel-line-start': 1673,
        'selection_end': 1694,
        'selection_start': 1690,
        'zoom': 0},
                       loc('sq.py'): {'attrib-starts': [],
                                      'code-line': '# SQ Square in a Graph\r\n',
                                      'first-line': 3,
                                      'folded-linenos': [],
                                      'sel-line': 15,
                                      'sel-line-start': 724,
                                      'selection_end': 746,
                                      'selection_start': 729,
                                      'zoom': 0},
                       loc('subo.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('suff.py'): {'attrib-starts': [],
        'code-line': "        for substring in suff('ATAAATG$'):\r\n",
        'first-line': 23,
        'folded-linenos': [],
        'sel-line': 30,
        'sel-line-start': 1225,
        'selection_end': 1254,
        'selection_start': 1250,
        'zoom': 0},
                       loc('template.py'): {'attrib-starts': [],
        'code-line': '    args = parser.parse_args()\r\n',
        'first-line': 24,
        'folded-linenos': [],
        'sel-line': 28,
        'sel-line-start': 1154,
        'selection_end': 1169,
        'selection_start': 1169,
        'zoom': 0},
                       loc('tree.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2020 Greenweaves Software Limited\r\n',
        'first-line': 10,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('trie.py'): {'attrib-starts': [],
        'code-line': "        Trie = create_trie(['ATAGA', 'ATC', 'GAT'])\r\n",
        'first-line': 17,
        'folded-linenos': [],
        'sel-line': 36,
        'sel-line-start': 1412,
        'selection_end': 1463,
        'selection_start': 1420,
        'zoom': 0},
                       loc('ts.py'): {'attrib-starts': [],
                                      'code-line': '          t = topological_order(adj)\r\n',
                                      'first-line': 14,
                                      'folded-linenos': [],
                                      'sel-line': 29,
                                      'sel-line-start': 1146,
                                      'selection_end': 1177,
                                      'selection_start': 1160,
                                      'zoom': 0},
                       loc('tyrocidine.py'): {'attrib-starts': [('sequence|0|',
        22)],
        'code-line': '     masses,pairs = create_lookup();\r\n',
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 28,
        'sel-line-start': 1098,
        'selection_end': 1098,
        'selection_start': 1098,
        'zoom': 0},
                       loc('ukkonen.py'): {'attrib-starts': [('build|0|',
        111)],
        'code-line': 'def build(chars, regularize=False):\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 111,
        'sel-line-start': 3573,
        'selection_end': 3600,
        'selection_start': 3590,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
search.replace-history = ['t',
                          's',
                          'i-1',
                          'i',
                          ', ',
                          'product',
                          'table',
                          'N_STATES',
                          'getCount',
                          'getFirstOccurrence',
                          'unlink',
                          'pop',
                          'trace',
                          'gather_edge_labels',
                          'find_attachment_point',
                          'suffix',
                          'expand',
                          'ToBeProcessed',
                          ']',
                          '[']
search.search-history = ['findEncodings',
                         'matrix',
                         'w',
                         'v',
                         'i_from',
                         'i_to',
                         'blosum',
                         ' ',
                         'b',
                         'count',
                         'argm',
                         'argmax',
                         'np.',
                         'cset',
                         'signed',
                         'print',
                         'CountChars',
                         'ConstructProfileHMM',
                         'record_transition',
                         'should']
